{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nRR Travel is a comprehensive Indonesian travel agency website available in two versions:\n\n1. **React/Node.js Version**: Modern full-stack architecture with React frontend and Express backend\n2. **cPanel Ready Version**: Pure HTML/CSS/JavaScript static website optimized for cPanel hosting\n\nThe application showcases travel packages for Indonesian destinations like Bali, Yogyakarta, Lombok, and Raja Ampat. Features include clickable travel packages with detailed modals, Mapbox integration with location search, QR code scanner, WhatsApp-integrated contact forms, and Tokopedia-inspired design with green color scheme.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Routing**: Wouter for lightweight client-side routing \n- **UI Components**: Shadcn/ui component library built on Radix UI primitives for accessible, customizable components\n- **Styling**: Tailwind CSS with custom design tokens for consistent theming and responsive design\n- **State Management**: TanStack Query (React Query) for server state management and API caching\n- **Build Tool**: Vite for fast development and optimized production builds\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework for RESTful API endpoints\n- **Language**: TypeScript for end-to-end type safety\n- **API Structure**: RESTful endpoints for travel packages (`/api/packages`) and inquiries (`/api/inquiries`)\n- **Data Storage**: In-memory storage implementation with interface for future database integration\n- **Development**: Hot module replacement and middleware for request logging\n\n## Database Design (React Version Only)\n- **ORM**: Drizzle ORM with PostgreSQL dialect for type-safe database operations  \n- **Schema**: Three main entities:\n  - Users table for authentication (planned feature)\n  - Travel packages table with details like name, description, price, duration, location\n  - Inquiries table for customer contact form submissions\n- **Validation**: Zod schemas for runtime type validation and API request/response validation\n\n## cPanel Static Version\n- **Architecture**: Pure HTML/CSS/JavaScript without build process\n- **Data Storage**: JavaScript objects for travel package data\n- **Deployment**: Direct upload to cPanel public_html folder\n- **External Services**: Mapbox API, WhatsApp Web API, QR Code Scanner via CDN\n- **Optimization**: .htaccess for compression, caching, and security headers\n\n## Key Design Patterns\n- **Monorepo Structure**: Shared schema definitions between frontend and backend in `/shared` directory\n- **Type Safety**: End-to-end TypeScript with shared types for consistent data models\n- **Component Architecture**: Modular React components with clear separation of concerns\n- **API Layer**: Centralized API client with error handling and credential management\n- **Development Experience**: Hot reloading, error overlays, and development-specific tooling\n\n# External Dependencies\n\n## Core Framework Dependencies\n- **@tanstack/react-query**: Server state management and caching\n- **wouter**: Lightweight React routing library\n- **drizzle-orm**: Type-safe ORM for database operations\n- **zod**: Runtime type validation and schema definition\n\n## UI and Styling\n- **@radix-ui/***: Headless UI primitives for accessible components\n- **tailwindcss**: Utility-first CSS framework\n- **class-variance-authority**: Component variant management\n- **lucide-react**: Icon library for consistent iconography\n\n## Database and Infrastructure\n- **@neondatabase/serverless**: Serverless PostgreSQL driver\n- **drizzle-kit**: Database migration and schema management tools\n- **connect-pg-simple**: PostgreSQL session store (for future authentication)\n\n## Development Tools\n- **vite**: Build tool and development server\n- **tsx**: TypeScript execution for server development\n- **@replit/vite-plugin-***: Replit-specific development enhancements\n- **esbuild**: JavaScript bundler for production builds\n\n## Potential Integrations\nThe application is structured to support future integrations with:\n- PostgreSQL database (currently using in-memory storage)\n- Authentication system (user schema already defined)\n- Email services for inquiry notifications\n- Payment gateways for booking functionality\n- Image storage services for travel package photos","size_bytes":4409},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n        'default': '1rem',\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        'primary-green': 'var(--primary-green)',\n        'light-green': 'var(--light-green)',\n        'dark-forest': 'var(--dark-forest)',\n        'warm-brown': 'var(--warm-brown)',\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        inter: ['Inter', 'sans-serif'],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3015},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"cpanel-version/README.md":{"content":"# RR Travel - cPanel Ready Version\n\nWebsite RR Travel dalam format HTML/CSS/JavaScript murni yang siap upload ke cPanel hosting.\n\n## 🎯 Fitur Lengkap\n\n### ✅ Fitur Utama\n- **Design Tokopedia-inspired** dengan warna hijau (#5da96a) \n- **Responsive** untuk mobile, tablet, dan desktop\n- **Paket wisata clickable** dengan modal detail lengkap\n- **Mapbox integration** dengan pencarian lokasi\n- **QR Code Scanner** untuk promotional material RR Travel\n- **Contact form** terintegrasi WhatsApp\n- **Smooth scrolling** dan animasi modern\n\n### ✅ Paket Wisata\n1. **Bali Budaya & Alam** - 3D2N - Rp 2,850,000\n2. **Yogya Heritage Tour** - 4D3N - Rp 1,950,000  \n3. **Lombok Paradise** - 5D4N - Rp 3,450,000\n4. **Raja Ampat Diving** - 6D5N - Rp 8,750,000\n5. **Java Cultural Journey** - 7D6N - Rp 4,250,000\n6. **Adventure Trekking** - 4D3N - Rp 2,150,000\n\n### ✅ Informasi Kontak\n- **Alamat**: Jl. Siti Mariah, Bandung 40231\n- **Telepon/WhatsApp**: 082115665661\n- **Owner**: Reza Pahlawan (Founder & CEO)\n\n## 📁 Struktur File\n\n```\ncpanel-version/\n├── index.html          # Halaman utama website\n├── style.css           # Styling lengkap dengan design Tokopedia\n├── script.js           # JavaScript untuk semua fungsi interaktif\n├── assets/             # Folder untuk gambar (logo, foto owner)\n│   └── .gitkeep       \n└── README.md           # Panduan ini\n```\n\n## 🚀 Cara Upload ke cPanel\n\n### 1. Persiapan File\n1. Download semua file dalam folder `cpanel-version/`\n2. Siapkan gambar yang dibutuhkan:\n   - `assets/rr-travel-logo.png` (logo RR Travel)\n   - `assets/owner-reza.png` (foto Reza Pahlawan)\n\n### 2. Upload ke cPanel\n1. **Login ke cPanel** hosting Anda\n2. **Buka File Manager**\n3. **Masuk ke folder public_html** (atau domain folder)\n4. **Upload semua file**:\n   - `index.html`\n   - `style.css` \n   - `script.js`\n   - Folder `assets/` beserta isinya\n\n### 3. Setting Permissions\n- Pastikan file memiliki permission **644**\n- Folder assets permission **755**\n\n### 4. Test Website\n- Akses domain Anda di browser\n- Test semua fitur:\n  - ✅ Navigasi menu\n  - ✅ Click paket wisata untuk modal\n  - ✅ QR Scanner (perlu akses kamera)\n  - ✅ Mapbox (perlu koneksi internet)\n  - ✅ Contact form ke WhatsApp\n\n## 🔧 Konfigurasi API\n\n### Mapbox Token\nFile sudah menggunakan Mapbox token yang valid. Jika ingin ganti:\n\n```javascript\n// Di script.js, line ~445\nmapboxgl.accessToken = 'YOUR_MAPBOX_TOKEN_HERE';\n```\n\n### WhatsApp Number\nNomor WhatsApp sudah diset ke **082115665661**. Untuk mengubah:\n\n```javascript\n// Di script.js, cari semua instance\nconst whatsappUrl = `https://wa.me/6282115665661?text=${encodeURIComponent(message)}`;\n// Ganti dengan nomor baru\n```\n\n## 📱 Fitur Mobile\n\n- **Responsive design** otomatis menyesuaikan layar\n- **Hamburger menu** untuk navigasi mobile\n- **Touch-friendly** buttons dan interactions\n- **QR Scanner** menggunakan kamera mobile\n\n## 🎨 Customisasi Design\n\n### Warna Utama (CSS Variables)\n```css\n:root {\n    --primary-green: #5da96a;        /* Hijau utama Tokopedia */\n    --primary-green-hover: #4a8757;  /* Hijau hover */\n    --dark-forest: #2c5530;          /* Hijau gelap */\n    --light-green: #e8f5e8;          /* Hijau muda background */\n}\n```\n\n### Font dan Typography\n- Font: Segoe UI (system font, loading cepat)\n- Responsive typography dengan rem units\n- Consistent spacing dengan CSS custom properties\n\n## 🔍 SEO Ready\n\n- **Meta tags** lengkap untuk semua page\n- **Open Graph** tags untuk social media\n- **Structured data** untuk travel packages\n- **Semantic HTML5** structure\n- **Image alt attributes** untuk accessibility\n\n## ⚡ Performance\n\n- **No build process** - langsung jalan di browser\n- **CDN resources** untuk libraries (Font Awesome, Mapbox)\n- **Optimized images** dengan lazy loading\n- **Minified external dependencies**\n\n## 🛟 Troubleshooting\n\n### QR Scanner tidak jalan\n- Pastikan website diakses via HTTPS\n- Check browser permissions untuk kamera\n- Test di browser yang berbeda\n\n### Map tidak muncul  \n- Check koneksi internet\n- Verifikasi Mapbox token masih valid\n- Check console browser untuk error\n\n### WhatsApp tidak redirect\n- Pastikan nomor format internasional: +6282115665661\n- Check browser tidak block popup\n\n### Images tidak muncul\n- Upload gambar ke folder `assets/`\n- Check nama file sesuai: `rr-travel-logo.png`, `owner-reza.png`\n- Fallback images dari Unsplash akan otomatis muncul\n\n## 📞 Support\n\nUntuk bantuan teknis:\n- **WhatsApp**: 082115665661\n- **Email**: info@rrtravel.com\n\n---\n\n**🎉 Website siap production dan compatible dengan semua cPanel hosting!**","size_bytes":4593},"cpanel-version/script.js":{"content":"// Travel packages data\nconst packages = [\n    {\n        id: 1,\n        name: \"Bali Budaya & Alam\",\n        description: \"Jelajahi keindahan sawah terasering Jatiluwih, Pura Tanah Lot, dan budaya Bali yang autentik\",\n        duration: \"3D2N\",\n        price: 2850000,\n        rating: 4.8,\n        imageUrl: \"https://images.unsplash.com/photo-1537953773345-d172ccf13cf1?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Bali\",\n        color: \"bg-primary-green\",\n        longDescription: \"Rasakan pengalaman tak terlupakan di Pulau Dewata dengan paket wisata yang menggabungkan keindahan alam dan kekayaan budaya Bali. Kunjungi sawah terasering Jatiluwih yang menakjubkan, saksi Pura Tanah Lot saat matahari terbenam, dan nikmati pertunjukan tari tradisional di Ubud.\",\n        highlights: [\"Sawah Terasering Jatiluwih\", \"Pura Tanah Lot\", \"Ubud Monkey Forest\", \"Pasar Seni Sukawati\", \"Pertunjukan Tari Kecak\"],\n        includes: [\"Hotel bintang 4\", \"Transportasi AC\", \"Makan 6x\", \"Guide profesional\", \"Tiket masuk wisata\"],\n        maxCapacity: 20,\n        gallery: [\n            \"https://images.unsplash.com/photo-1537953773345-d172ccf13cf1?w=400\",\n            \"https://images.unsplash.com/photo-1518548419970-58e3b4079ab2?w=400\",\n            \"https://images.unsplash.com/photo-1555400113-f9031b67b441?w=400\"\n        ]\n    },\n    {\n        id: 2,\n        name: \"Yogya Heritage Tour\",\n        description: \"Eksplorasi Candi Borobudur, Prambanan, Keraton Yogya, dan kuliner legendaris Gudeg\",\n        duration: \"4D3N\",\n        price: 1950000,\n        rating: 4.9,\n        imageUrl: \"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Yogyakarta\",\n        color: \"bg-warm-brown\",\n        longDescription: \"Nikmati perjalanan sejarah dan budaya di kota istimewa Yogyakarta. Jelajahi kemegahan Candi Borobudur dan Prambanan, rasakan kehidupan kerajaan di Kraton Sultan, dan manjakan lidah dengan kuliner khas seperti Gudeg Yu Djum yang legendaris.\",\n        highlights: [\"Candi Borobudur Sunrise\", \"Candi Prambanan\", \"Keraton Yogyakarta\", \"Jalan Malioboro\", \"Taman Sari\", \"Kuliner Gudeg\"],\n        includes: [\"Hotel heritage\", \"Transportasi pribadi\", \"Makan 9x\", \"Guide sejarah\", \"Tiket candi\", \"Workshop batik\"],\n        maxCapacity: 15,\n        gallery: [\n            \"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?w=400\",\n            \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400\",\n            \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\"\n        ]\n    },\n    {\n        id: 3,\n        name: \"Lombok Paradise\",\n        description: \"Nikmati keindahan Pantai Senggigi, Gili Trawangan, dan pendakian Gunung Rinjani\",\n        duration: \"5D4N\",\n        price: 3450000,\n        rating: 4.6,\n        imageUrl: \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Lombok\",\n        color: \"bg-blue-500\",\n        longDescription: \"Temukan surga tersembunyi di Lombok dengan kombinasi sempurna antara petualangan dan relaksasi. Jelajahi pantai-pantai eksotis, nikmati snorkeling di Gili Trawangan, dan tantang diri dengan pendakian Gunung Rinjani yang menakjubkan.\",\n        highlights: [\"Pantai Senggigi\", \"Gili Trawangan\", \"Trekking Rinjani\", \"Air Terjun Sekumpul\", \"Desa Sade\", \"Pantai Kuta Lombok\"],\n        includes: [\"Resort tepi pantai\", \"Speedboat Gili\", \"Peralatan snorkeling\", \"Guide trekking\", \"Makan 12x\", \"Perlengkapan camping\"],\n        maxCapacity: 12,\n        gallery: [\n            \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\",\n            \"https://images.unsplash.com/photo-1571896349842-33c89424de2d?w=400\",\n            \"https://images.unsplash.com/photo-1566142475016-16e88ac35de7?w=400\"\n        ]\n    },\n    {\n        id: 4,\n        name: \"Raja Ampat Diving\",\n        description: \"Eksplorasi surga bawah laut terbaik dunia dengan keanekaragaman hayati luar biasa\",\n        duration: \"6D5N\",\n        price: 8750000,\n        rating: 5.0,\n        imageUrl: \"https://images.unsplash.com/photo-1583212292454-1fe6229603b7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Raja Ampat\",\n        color: \"bg-teal-500\",\n        longDescription: \"Rasakan pengalaman diving terbaik di dunia di Raja Ampat, Papua Barat. Dengan 75% spesies ikan dunia dan terumbu karang yang masih pristine, Raja Ampat adalah surga bagi para pecinta bawah laut dan underwater photography.\",\n        highlights: [\"Diving Pianemo\", \"Cape Kri\", \"Arborek Village\", \"Piaynemo Mushroom Rock\", \"Underwater Photography\", \"Manta Ray Cleaning Station\"],\n        includes: [\"Liveaboard premium\", \"Full diving equipment\", \"Certified divemaster\", \"Underwater camera\", \"Full board meals\", \"Airport transfer Sorong\"],\n        maxCapacity: 8,\n        gallery: [\n            \"https://images.unsplash.com/photo-1583212292454-1fe6229603b7?w=400\",\n            \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\",\n            \"https://images.unsplash.com/photo-1582967788606-a171c1080cb0?w=400\"\n        ]\n    },\n    {\n        id: 5,\n        name: \"Java Cultural Journey\",\n        description: \"Perjalanan budaya lengkap Jakarta-Bandung-Yogya-Solo dengan pengalaman autentik\",\n        duration: \"7D6N\",\n        price: 4250000,\n        rating: 4.7,\n        imageUrl: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Java\",\n        color: \"bg-purple-500\",\n        longDescription: \"Jelajahi kekayaan budaya Pulau Jawa dari Jakarta hingga Solo. Rasakan perkembangan sejarah Indonesia melalui museum, istana kerajaan, kampung batik, dan kuliner tradisional yang otentik di setiap kota.\",\n        highlights: [\"Monas Jakarta\", \"Factory Outlet Bandung\", \"Candi Borobudur\", \"Keraton Solo\", \"Museum Batik\", \"Kuliner Street Food\"],\n        includes: [\"Hotel bintang 4\", \"Kereta eksekutif\", \"Bus pariwisata\", \"Guide lokal\", \"Makan 18x\", \"Workshop batik\"],\n        maxCapacity: 25,\n        gallery: [\n            \"https://images.unsplash.com/photo-1551632811-561732d1e306?w=400\",\n            \"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?w=400\",\n            \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400\"\n        ]\n    },\n    {\n        id: 6,\n        name: \"Adventure Trekking\",\n        description: \"Petualangan mendaki Gunung Bromo, air terjun Tumpak Sewu, dan kawah Ijen yang memukau\",\n        duration: \"4D3N\",\n        price: 2150000,\n        rating: 4.8,\n        imageUrl: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"East Java\",\n        color: \"bg-orange-500\",\n        longDescription: \"Tantang adrenalin dengan petualangan trekking di Jawa Timur. Saksikan sunrise dari puncak Bromo, jelajahi keindahan air terjun Tumpak Sewu, dan nikmati blue fire phenomenon di kawah Ijen yang spektakuler.\",\n        highlights: [\"Sunrise Mount Bromo\", \"Tumpak Sewu Waterfall\", \"Ijen Blue Fire\", \"Whispering Sand\", \"Cemoro Lawang\", \"Traditional Village\"],\n        includes: [\"Mountain lodge\", \"Jeep 4WD\", \"Trekking equipment\", \"Professional guide\", \"Makan 9x\", \"Gas mask Ijen\"],\n        maxCapacity: 16,\n        gallery: [\n            \"https://images.unsplash.com/photo-1551632811-561732d1e306?w=400\",\n            \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\",\n            \"https://images.unsplash.com/photo-1571896349842-33c89424de2d?w=400\"\n        ]\n    }\n];\n\n// Global variables\nlet map;\nlet qrScanner;\nlet currentPackage = null;\n\n// DOM Content Loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    initializeApp();\n});\n\n// Initialize application\nfunction initializeApp() {\n    setupNavigation();\n    renderPackages();\n    initializeMap();\n    setupModals();\n    setupContactForm();\n    setupScrollEffects();\n}\n\n// Navigation setup\nfunction setupNavigation() {\n    const hamburger = document.getElementById('hamburger');\n    const navMenu = document.getElementById('navMenu');\n    \n    hamburger?.addEventListener('click', function() {\n        hamburger.classList.toggle('active');\n        navMenu.classList.toggle('active');\n    });\n    \n    // Close menu when clicking nav links\n    const navLinks = document.querySelectorAll('.nav-link');\n    navLinks.forEach(link => {\n        link.addEventListener('click', function() {\n            hamburger.classList.remove('active');\n            navMenu.classList.remove('active');\n        });\n    });\n    \n    // Close menu when clicking outside\n    document.addEventListener('click', function(e) {\n        if (!hamburger.contains(e.target) && !navMenu.contains(e.target)) {\n            hamburger.classList.remove('active');\n            navMenu.classList.remove('active');\n        }\n    });\n}\n\n// Render packages\nfunction renderPackages() {\n    const packagesGrid = document.getElementById('packagesGrid');\n    if (!packagesGrid) return;\n    \n    packagesGrid.innerHTML = packages.map(pkg => createPackageCard(pkg)).join('');\n}\n\n// Create package card HTML\nfunction createPackageCard(pkg) {\n    const colorMap = {\n        'bg-primary-green': '#5da96a',\n        'bg-warm-brown': '#8b4513',\n        'bg-blue-500': '#3b82f6',\n        'bg-teal-500': '#14b8a6',\n        'bg-purple-500': '#8b5cf6',\n        'bg-orange-500': '#f97316'\n    };\n    \n    const backgroundColor = colorMap[pkg.color] || '#5da96a';\n    \n    return `\n        <div class=\"package-card\" onclick=\"openPackageModal(${pkg.id})\">\n            <div class=\"package-image\">\n                <img src=\"${pkg.imageUrl}\" alt=\"${pkg.name}\" loading=\"lazy\">\n                <div class=\"package-badge\" style=\"background-color: ${backgroundColor}\">\n                    ${pkg.duration}\n                </div>\n                <div class=\"package-rating\">\n                    ${renderStars(pkg.rating)}\n                    <span>${pkg.rating}</span>\n                </div>\n            </div>\n            <div class=\"package-content\">\n                <div class=\"package-location\">\n                    <i class=\"fas fa-map-marker-alt\"></i>\n                    <span>${pkg.location}</span>\n                </div>\n                <h3 class=\"package-title\">${pkg.name}</h3>\n                <p class=\"package-description\">${pkg.description}</p>\n                <div class=\"package-footer\">\n                    <div class=\"package-price\">\n                        Rp ${formatPrice(pkg.price)}\n                        <span class=\"package-price-unit\">/orang</span>\n                    </div>\n                    <button class=\"package-btn\" onclick=\"event.stopPropagation(); openPackageModal(${pkg.id})\">\n                        Lihat Detail\n                    </button>\n                </div>\n            </div>\n        </div>\n    `;\n}\n\n// Render stars for rating\nfunction renderStars(rating) {\n    let stars = '';\n    for (let i = 1; i <= 5; i++) {\n        const starClass = i <= rating ? 'star' : 'star empty';\n        stars += `<i class=\"fas fa-star ${starClass}\"></i>`;\n    }\n    return `<div class=\"stars\">${stars}</div>`;\n}\n\n// Format price to Indonesian format\nfunction formatPrice(price) {\n    return new Intl.NumberFormat('id-ID').format(price);\n}\n\n// Format price to currency\nfunction formatCurrency(price) {\n    return new Intl.NumberFormat('id-ID', {\n        style: 'currency',\n        currency: 'IDR',\n        minimumFractionDigits: 0,\n    }).format(price);\n}\n\n// Open package modal\nfunction openPackageModal(packageId) {\n    const pkg = packages.find(p => p.id === packageId);\n    if (!pkg) return;\n    \n    currentPackage = pkg;\n    const modal = document.getElementById('packageModal');\n    const modalTitle = document.getElementById('modalTitle');\n    const modalBody = document.getElementById('modalBody');\n    \n    modalTitle.textContent = pkg.name;\n    modalBody.innerHTML = createPackageModalContent(pkg);\n    \n    modal.classList.add('show');\n    document.body.style.overflow = 'hidden';\n}\n\n// Create package modal content\nfunction createPackageModalContent(pkg) {\n    const colorMap = {\n        'bg-primary-green': '#5da96a',\n        'bg-warm-brown': '#8b4513',\n        'bg-blue-500': '#3b82f6',\n        'bg-teal-500': '#14b8a6',\n        'bg-purple-500': '#8b5cf6',\n        'bg-orange-500': '#f97316'\n    };\n    \n    const backgroundColor = colorMap[pkg.color] || '#5da96a';\n    \n    return `\n        <div class=\"package-modal-grid\">\n            <div class=\"package-gallery\">\n                <img src=\"${pkg.imageUrl}\" alt=\"${pkg.name}\" class=\"main-image\" id=\"mainImage\">\n                <div class=\"thumbnail-grid\">\n                    ${pkg.gallery.map(img => `\n                        <img src=\"${img}\" alt=\"${pkg.name}\" class=\"thumbnail\" onclick=\"changeMainImage('${img}')\">\n                    `).join('')}\n                </div>\n            </div>\n            <div class=\"package-details\">\n                <div class=\"package-meta\">\n                    <div>\n                        <i class=\"fas fa-map-marker-alt\"></i>\n                        <span>${pkg.location}</span>\n                    </div>\n                    <div>\n                        <i class=\"fas fa-clock\"></i>\n                        <span>${pkg.duration}</span>\n                    </div>\n                    <div>\n                        <i class=\"fas fa-users\"></i>\n                        <span>Max ${pkg.maxCapacity} orang</span>\n                    </div>\n                    ${renderStars(pkg.rating)}\n                </div>\n                \n                <div>\n                    <h4>Deskripsi Paket</h4>\n                    <p>${pkg.longDescription}</p>\n                </div>\n                \n                <div class=\"package-highlights\">\n                    <h4>Highlight Destinasi</h4>\n                    <ul>\n                        ${pkg.highlights.map(highlight => `\n                            <li><i class=\"fas fa-camera\"></i> ${highlight}</li>\n                        `).join('')}\n                    </ul>\n                </div>\n                \n                <div class=\"package-includes\">\n                    <h4>Yang Sudah Termasuk</h4>\n                    <ul>\n                        ${pkg.includes.map(include => `<li>${include}</li>`).join('')}\n                    </ul>\n                </div>\n                \n                <div class=\"package-pricing\">\n                    <div class=\"price\">${formatCurrency(pkg.price)}</div>\n                    <div class=\"price-unit\">per orang</div>\n                    <div style=\"background-color: ${backgroundColor}; color: white; padding: 0.5rem 1rem; border-radius: 8px; margin-top: 1rem; display: inline-block;\">\n                        ${pkg.duration}\n                    </div>\n                </div>\n                \n                <div class=\"package-actions\">\n                    <button class=\"btn-primary\" onclick=\"bookPackage(${pkg.id})\">\n                        <i class=\"fas fa-car\"></i>\n                        Pesan Sekarang\n                    </button>\n                    <button class=\"btn-secondary\" onclick=\"askDetails(${pkg.id})\">\n                        <i class=\"fas fa-utensils\"></i>\n                        Tanya Detail\n                    </button>\n                </div>\n            </div>\n        </div>\n    `;\n}\n\n// Change main image in modal\nfunction changeMainImage(imageSrc) {\n    const mainImage = document.getElementById('mainImage');\n    if (mainImage) {\n        mainImage.src = imageSrc;\n    }\n}\n\n// Close package modal\nfunction closePackageModal() {\n    const modal = document.getElementById('packageModal');\n    modal.classList.remove('show');\n    document.body.style.overflow = 'auto';\n    currentPackage = null;\n}\n\n// Book package\nfunction bookPackage(packageId) {\n    const pkg = packages.find(p => p.id === packageId);\n    if (pkg) {\n        const message = `Halo RR Travel! Saya tertarik dengan paket ${pkg.name} (${pkg.duration}) seharga ${formatCurrency(pkg.price)}. Bisa tolong berikan informasi lebih detail?`;\n        const whatsappUrl = `https://wa.me/6282115665661?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n    }\n    closePackageModal();\n}\n\n// Ask details\nfunction askDetails(packageId) {\n    const pkg = packages.find(p => p.id === packageId);\n    if (pkg) {\n        const message = `Halo RR Travel! Saya ingin tanya detail lebih lanjut tentang paket ${pkg.name}. Bisa dijelaskan lebih detail?`;\n        const whatsappUrl = `https://wa.me/6282115665661?text=${encodeURIComponent(message)}`;\n        window.open(whatsappUrl, '_blank');\n    }\n    closePackageModal();\n}\n\n// Initialize Mapbox\nfunction initializeMap() {\n    if (typeof mapboxgl === 'undefined') {\n        console.warn('Mapbox GL JS not loaded');\n        return;\n    }\n    \n    // Use your actual Mapbox token here\n    mapboxgl.accessToken = 'pk.eyJ1IjoidmluYTk4IiwiYSI6ImNtN3VjZ3loNjBmY2IyanF1Zm5ra3RyMjEifQ.P1CXwmOxsWHR5b4bKu5GQg';\n    \n    try {\n        map = new mapboxgl.Map({\n            container: 'map',\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center: [107.6098, -6.9175], // Bandung coordinates\n            zoom: 15\n        });\n        \n        // Add marker for office location\n        new mapboxgl.Marker({\n            color: '#5da96a'\n        })\n        .setLngLat([107.6098, -6.9175])\n        .setPopup(new mapboxgl.Popup().setHTML('<h3>RR Travel</h3><p>Jl. Siti Mariah, Bandung 40231</p>'))\n        .addTo(map);\n        \n        // Add navigation controls\n        map.addControl(new mapboxgl.NavigationControl());\n        \n    } catch (error) {\n        console.error('Error initializing map:', error);\n        // Fallback: show static map message\n        const mapContainer = document.getElementById('map');\n        if (mapContainer) {\n            mapContainer.innerHTML = `\n                <div style=\"display: flex; align-items: center; justify-content: center; height: 100%; background: #f5f5f5; color: #666;\">\n                    <div style=\"text-align: center;\">\n                        <i class=\"fas fa-map-marker-alt\" style=\"font-size: 3rem; color: #5da96a; margin-bottom: 1rem;\"></i>\n                        <h3>Lokasi RR Travel</h3>\n                        <p>Jl. Siti Mariah, Bandung 40231</p>\n                        <p>Telepon: 082115665661</p>\n                    </div>\n                </div>\n            `;\n        }\n    }\n}\n\n// Search location on map\nfunction searchLocation() {\n    const searchInput = document.getElementById('locationSearch');\n    const query = searchInput.value.trim();\n    \n    if (!query || !map) return;\n    \n    // Use Mapbox Geocoding API for location search\n    const geocodingUrl = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(query)}.json?access_token=${mapboxgl.accessToken}&country=ID&proximity=107.6098,-6.9175`;\n    \n    fetch(geocodingUrl)\n        .then(response => response.json())\n        .then(data => {\n            if (data.features && data.features.length > 0) {\n                const [lng, lat] = data.features[0].center;\n                map.flyTo({\n                    center: [lng, lat],\n                    zoom: 15\n                });\n                \n                // Add temporary marker\n                new mapboxgl.Marker({\n                    color: '#f97316'\n                })\n                .setLngLat([lng, lat])\n                .setPopup(new mapboxgl.Popup().setHTML(`<h3>${data.features[0].place_name}</h3>`))\n                .addTo(map);\n            } else {\n                alert('Lokasi tidak ditemukan. Silakan coba kata kunci lain.');\n            }\n        })\n        .catch(error => {\n            console.error('Error searching location:', error);\n            alert('Terjadi error saat mencari lokasi.');\n        });\n}\n\n// Setup modals\nfunction setupModals() {\n    // Close modals when clicking outside\n    window.addEventListener('click', function(e) {\n        const packageModal = document.getElementById('packageModal');\n        const qrModal = document.getElementById('qrModal');\n        \n        if (e.target === packageModal) {\n            closePackageModal();\n        }\n        \n        if (e.target === qrModal) {\n            closeQRScanner();\n        }\n    });\n    \n    // Close modals with escape key\n    document.addEventListener('keydown', function(e) {\n        if (e.key === 'Escape') {\n            closePackageModal();\n            closeQRScanner();\n        }\n    });\n}\n\n// Setup contact form\nfunction setupContactForm() {\n    const form = document.getElementById('contactForm');\n    if (form) {\n        form.addEventListener('submit', handleContactSubmit);\n    }\n}\n\n// Handle contact form submission\nfunction handleContactSubmit(e) {\n    e.preventDefault();\n    \n    const formData = new FormData(e.target);\n    const data = {\n        name: formData.get('name'),\n        email: formData.get('email'),\n        phone: formData.get('phone'),\n        package: formData.get('package'),\n        message: formData.get('message')\n    };\n    \n    // Create WhatsApp message\n    const packageName = data.package ? packages.find(p => p.id === data.package)?.name || 'Paket Custom' : 'Konsultasi Umum';\n    const whatsappMessage = `\nHalo RR Travel!\n\nSaya tertarik untuk berkonsultasi tentang paket wisata.\n\nDetail kontak:\n- Nama: ${data.name}\n- Email: ${data.email}\n- WhatsApp: ${data.phone}\n- Paket: ${packageName}\n\nPesan:\n${data.message}\n\nMohon informasi lebih lanjut. Terima kasih!\n    `.trim();\n    \n    const whatsappUrl = `https://wa.me/6282115665661?text=${encodeURIComponent(whatsappMessage)}`;\n    \n    // Show loading state\n    const submitBtn = e.target.querySelector('button[type=\"submit\"]');\n    const originalText = submitBtn.innerHTML;\n    submitBtn.innerHTML = '<span class=\"spinner\"></span> Mengirim...';\n    submitBtn.disabled = true;\n    \n    // Simulate sending delay\n    setTimeout(() => {\n        window.open(whatsappUrl, '_blank');\n        \n        // Reset form\n        e.target.reset();\n        \n        // Reset button\n        submitBtn.innerHTML = originalText;\n        submitBtn.disabled = false;\n        \n        // Show success message\n        alert('Pesan berhasil disiapkan! Anda akan diarahkan ke WhatsApp.');\n    }, 1000);\n}\n\n// QR Scanner functionality\nfunction openQRScanner() {\n    if (typeof Html5Qrcode === 'undefined') {\n        alert('QR Scanner belum tersedia. Pastikan koneksi internet stabil.');\n        return;\n    }\n    \n    const modal = document.getElementById('qrModal');\n    modal.classList.add('show');\n    document.body.style.overflow = 'hidden';\n    \n    const qrReaderId = \"qr-reader\";\n    qrScanner = new Html5Qrcode(qrReaderId);\n    \n    const config = {\n        fps: 10,\n        qrbox: { width: 250, height: 250 },\n        aspectRatio: 1.0\n    };\n    \n    Html5Qrcode.getCameras().then(cameras => {\n        if (cameras && cameras.length) {\n            const cameraId = cameras[0].id;\n            \n            qrScanner.start(cameraId, config, (decodedText, decodedResult) => {\n                onQRCodeScanned(decodedText);\n            })\n            .catch(err => {\n                console.error('Error starting QR scanner:', err);\n                alert('Tidak dapat mengakses kamera. Pastikan izin kamera telah diberikan.');\n                closeQRScanner();\n            });\n        } else {\n            alert('Tidak ada kamera yang tersedia.');\n            closeQRScanner();\n        }\n    }).catch(err => {\n        console.error('Error getting cameras:', err);\n        alert('Error mengakses kamera.');\n        closeQRScanner();\n    });\n}\n\nfunction closeQRScanner() {\n    const modal = document.getElementById('qrModal');\n    modal.classList.remove('show');\n    document.body.style.overflow = 'auto';\n    \n    if (qrScanner) {\n        qrScanner.stop().then(() => {\n            qrScanner.clear();\n            qrScanner = null;\n        }).catch(err => {\n            console.error('Error stopping QR scanner:', err);\n        });\n    }\n    \n    // Clear results\n    const resultsDiv = document.getElementById('qr-reader-results');\n    if (resultsDiv) {\n        resultsDiv.classList.remove('show');\n        resultsDiv.innerHTML = '';\n    }\n}\n\nfunction onQRCodeScanned(decodedText) {\n    // Stop scanning\n    if (qrScanner) {\n        qrScanner.stop();\n    }\n    \n    // Show results\n    const resultsDiv = document.getElementById('qr-reader-results');\n    if (resultsDiv) {\n        resultsDiv.innerHTML = `\n            <h4>QR Code Berhasil Dipindai!</h4>\n            <p><strong>Hasil:</strong> ${decodedText}</p>\n            <div style=\"margin-top: 1rem;\">\n                <button class=\"btn-primary\" onclick=\"processQRResult('${decodedText}')\">\n                    Proses Hasil\n                </button>\n                <button class=\"btn-secondary\" onclick=\"closeQRScanner()\" style=\"margin-left: 0.5rem;\">\n                    Tutup\n                </button>\n            </div>\n        `;\n        resultsDiv.classList.add('show');\n    }\n}\n\nfunction processQRResult(result) {\n    // Process QR code result (customize based on your QR code format)\n    if (result.includes('rrtravel') || result.includes('rr-travel')) {\n        // It's an RR Travel QR code\n        if (result.includes('package')) {\n            // Extract package ID from QR code\n            const packageMatch = result.match(/package[=:](\\d+)/i);\n            if (packageMatch) {\n                const packageId = parseInt(packageMatch[1]);\n                closeQRScanner();\n                setTimeout(() => openPackageModal(packageId), 500);\n                return;\n            }\n        }\n        \n        // Default RR Travel QR code action\n        alert('QR Code RR Travel berhasil dipindai! Mengarahkan ke halaman utama...');\n        closeQRScanner();\n        scrollToSection('home');\n    } else if (result.startsWith('http')) {\n        // It's a URL\n        if (confirm('QR Code berisi link. Buka link ini?')) {\n            window.open(result, '_blank');\n        }\n        closeQRScanner();\n    } else {\n        // Generic text or other format\n        alert(`QR Code berisi: ${result}`);\n        closeQRScanner();\n    }\n}\n\n// Utility functions\nfunction scrollToSection(sectionId) {\n    const section = document.getElementById(sectionId);\n    if (section) {\n        section.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n        });\n    }\n}\n\nfunction setupScrollEffects() {\n    // Add scroll effect to navigation\n    let lastScroll = 0;\n    const header = document.querySelector('.header');\n    \n    window.addEventListener('scroll', () => {\n        const currentScroll = window.pageYOffset;\n        \n        if (currentScroll <= 0) {\n            header.classList.remove('scroll-up');\n            return;\n        }\n        \n        if (currentScroll > lastScroll && !header.classList.contains('scroll-down')) {\n            // Scrolling down\n            header.classList.remove('scroll-up');\n            header.classList.add('scroll-down');\n        } else if (currentScroll < lastScroll && header.classList.contains('scroll-down')) {\n            // Scrolling up\n            header.classList.remove('scroll-down');\n            header.classList.add('scroll-up');\n        }\n        \n        lastScroll = currentScroll;\n    });\n    \n    // Intersection Observer for animations\n    const observerOptions = {\n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n    };\n    \n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                entry.target.classList.add('fade-in');\n            }\n        });\n    }, observerOptions);\n    \n    // Observe sections\n    document.querySelectorAll('section').forEach(section => {\n        observer.observe(section);\n    });\n}\n\n// Add smooth scroll CSS for navigation hide/show\nconst style = document.createElement('style');\nstyle.textContent = `\n    .header.scroll-down {\n        transform: translateY(-100%);\n    }\n    \n    .header.scroll-up {\n        transform: translateY(0);\n    }\n    \n    .header {\n        transition: transform 0.3s ease-in-out;\n    }\n`;\ndocument.head.appendChild(style);","size_bytes":28199},"cpanel-version/style.css":{"content":"/* Reset and Base Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    /* Tokopedia Green Colors */\n    --primary-green: #5da96a;\n    --primary-green-hover: #4a8757;\n    --dark-forest: #2c5530;\n    --warm-brown: #8b4513;\n    --light-green: #e8f5e8;\n    \n    /* Typography */\n    --font-primary: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    \n    /* Spacing */\n    --spacing-xs: 0.25rem;\n    --spacing-sm: 0.5rem;\n    --spacing-md: 1rem;\n    --spacing-lg: 1.5rem;\n    --spacing-xl: 2rem;\n    --spacing-2xl: 3rem;\n    \n    /* Border Radius */\n    --radius-sm: 4px;\n    --radius-md: 8px;\n    --radius-lg: 12px;\n    --radius-xl: 16px;\n    \n    /* Shadows */\n    --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);\n    --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);\n    --shadow-lg: 0 10px 25px rgba(0, 0, 0, 0.1);\n    --shadow-xl: 0 20px 40px rgba(0, 0, 0, 0.1);\n}\n\nhtml {\n    scroll-behavior: smooth;\n}\n\nbody {\n    font-family: var(--font-primary);\n    line-height: 1.6;\n    color: #333;\n    background-color: #fff;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 var(--spacing-lg);\n}\n\n/* Header Styles */\n.header {\n    position: fixed;\n    top: 0;\n    width: 100%;\n    background: rgba(255, 255, 255, 0.95);\n    backdrop-filter: blur(10px);\n    z-index: 1000;\n    border-bottom: 1px solid rgba(93, 169, 106, 0.1);\n}\n\n.nav-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: var(--spacing-md) var(--spacing-lg);\n    max-width: 1200px;\n    margin: 0 auto;\n}\n\n.nav-logo {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: var(--primary-green);\n    text-decoration: none;\n}\n\n.logo-img {\n    width: 40px;\n    height: 40px;\n    object-fit: contain;\n}\n\n.logo-text {\n    font-size: 1.5rem;\n    font-weight: bold;\n}\n\n.nav-menu {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-xl);\n}\n\n.nav-link {\n    text-decoration: none;\n    color: #333;\n    font-weight: 500;\n    transition: color 0.3s ease;\n    position: relative;\n}\n\n.nav-link:hover {\n    color: var(--primary-green);\n}\n\n.nav-link:hover::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: var(--primary-green);\n}\n\n.qr-scanner-btn {\n    background: var(--primary-green);\n    color: white;\n    border: none;\n    padding: var(--spacing-sm) var(--spacing-md);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n    transition: all 0.3s ease;\n}\n\n.qr-scanner-btn:hover {\n    background: var(--primary-green-hover);\n    transform: translateY(-1px);\n}\n\n.hamburger {\n    display: none;\n    flex-direction: column;\n    cursor: pointer;\n    gap: 4px;\n}\n\n.hamburger span {\n    width: 25px;\n    height: 3px;\n    background: var(--primary-green);\n    transition: 0.3s;\n}\n\n/* Hero Section */\n.hero {\n    display: flex;\n    align-items: center;\n    min-height: 100vh;\n    padding: var(--spacing-2xl) var(--spacing-lg);\n    background: linear-gradient(135deg, var(--light-green) 0%, #fff 100%);\n    margin-top: 70px;\n}\n\n.hero-content {\n    flex: 1;\n    max-width: 600px;\n}\n\n.hero-title {\n    font-size: 3rem;\n    font-weight: bold;\n    color: var(--dark-forest);\n    margin-bottom: var(--spacing-lg);\n    line-height: 1.2;\n}\n\n.hero-subtitle {\n    font-size: 1.25rem;\n    color: #666;\n    margin-bottom: var(--spacing-xl);\n    line-height: 1.6;\n}\n\n.hero-buttons {\n    display: flex;\n    gap: var(--spacing-lg);\n    flex-wrap: wrap;\n}\n\n.btn-primary {\n    background: var(--primary-green);\n    color: white;\n    border: none;\n    padding: var(--spacing-md) var(--spacing-xl);\n    border-radius: var(--radius-md);\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    text-decoration: none;\n    display: inline-flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n}\n\n.btn-primary:hover {\n    background: var(--primary-green-hover);\n    transform: translateY(-2px);\n    box-shadow: var(--shadow-lg);\n}\n\n.btn-secondary {\n    background: transparent;\n    color: var(--primary-green);\n    border: 2px solid var(--primary-green);\n    padding: var(--spacing-md) var(--spacing-xl);\n    border-radius: var(--radius-md);\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.btn-secondary:hover {\n    background: var(--primary-green);\n    color: white;\n    transform: translateY(-2px);\n}\n\n.hero-image {\n    flex: 1;\n    text-align: center;\n}\n\n.hero-image img {\n    max-width: 100%;\n    height: auto;\n    border-radius: var(--radius-xl);\n    box-shadow: var(--shadow-xl);\n}\n\n/* About Section */\n.about {\n    padding: var(--spacing-2xl) 0;\n    background: #fff;\n}\n\n.about-grid {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    gap: var(--spacing-2xl);\n    align-items: center;\n}\n\n.section-title {\n    font-size: 2.5rem;\n    font-weight: bold;\n    color: var(--dark-forest);\n    margin-bottom: var(--spacing-lg);\n}\n\n.owner-name {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: var(--primary-green);\n    margin-bottom: var(--spacing-sm);\n}\n\n.owner-title {\n    font-size: 1rem;\n    color: #666;\n    margin-bottom: var(--spacing-lg);\n}\n\n.about-text {\n    font-size: 1.1rem;\n    color: #555;\n    line-height: 1.7;\n    margin-bottom: var(--spacing-xl);\n}\n\n.company-stats {\n    display: flex;\n    gap: var(--spacing-xl);\n    flex-wrap: wrap;\n}\n\n.stat-item {\n    text-align: center;\n}\n\n.stat-number {\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--primary-green);\n}\n\n.stat-label {\n    font-size: 0.9rem;\n    color: #666;\n}\n\n.about-image img {\n    width: 100%;\n    max-width: 300px;\n    height: 300px;\n    object-fit: cover;\n    border-radius: 50%;\n    box-shadow: var(--shadow-lg);\n}\n\n/* Packages Section */\n.packages {\n    padding: var(--spacing-2xl) 0;\n    background: var(--light-green);\n}\n\n.section-header {\n    text-align: center;\n    margin-bottom: var(--spacing-2xl);\n}\n\n.section-subtitle {\n    font-size: 1.25rem;\n    color: #666;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.packages-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    gap: var(--spacing-xl);\n    margin-bottom: var(--spacing-2xl);\n}\n\n.package-card {\n    background: white;\n    border-radius: var(--radius-lg);\n    overflow: hidden;\n    box-shadow: var(--shadow-md);\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n.package-card:hover {\n    transform: translateY(-5px) scale(1.02);\n    box-shadow: var(--shadow-xl);\n}\n\n.package-image {\n    position: relative;\n    width: 100%;\n    height: 200px;\n    overflow: hidden;\n}\n\n.package-image img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform 0.3s ease;\n}\n\n.package-card:hover .package-image img {\n    transform: scale(1.1);\n}\n\n.package-badge {\n    position: absolute;\n    top: var(--spacing-md);\n    left: var(--spacing-md);\n    background: var(--primary-green);\n    color: white;\n    padding: var(--spacing-sm) var(--spacing-md);\n    border-radius: var(--radius-md);\n    font-size: 0.875rem;\n    font-weight: 600;\n}\n\n.package-rating {\n    position: absolute;\n    top: var(--spacing-md);\n    right: var(--spacing-md);\n    background: rgba(255, 255, 255, 0.9);\n    backdrop-filter: blur(5px);\n    padding: var(--spacing-sm);\n    border-radius: var(--radius-md);\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-xs);\n}\n\n.stars {\n    display: flex;\n    gap: 2px;\n}\n\n.star {\n    color: #ffd700;\n    font-size: 0.875rem;\n}\n\n.star.empty {\n    color: #ddd;\n}\n\n.package-content {\n    padding: var(--spacing-lg);\n}\n\n.package-location {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n    margin-bottom: var(--spacing-sm);\n    color: #666;\n    font-size: 0.875rem;\n}\n\n.package-title {\n    font-size: 1.25rem;\n    font-weight: bold;\n    color: var(--dark-forest);\n    margin-bottom: var(--spacing-sm);\n    transition: color 0.3s ease;\n}\n\n.package-card:hover .package-title {\n    color: var(--primary-green);\n}\n\n.package-description {\n    color: #666;\n    margin-bottom: var(--spacing-lg);\n    line-height: 1.6;\n}\n\n.package-footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.package-price {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: var(--primary-green);\n}\n\n.package-price-unit {\n    font-size: 0.875rem;\n    color: #666;\n    font-weight: normal;\n}\n\n.package-btn {\n    background: var(--primary-green);\n    color: white;\n    border: none;\n    padding: var(--spacing-sm) var(--spacing-lg);\n    border-radius: var(--radius-md);\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.package-btn:hover {\n    background: var(--primary-green-hover);\n}\n\n.section-footer {\n    text-align: center;\n}\n\n/* Map Section */\n.map-section {\n    padding: var(--spacing-2xl) 0;\n    background: #fff;\n}\n\n.map-content {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: var(--spacing-2xl);\n    align-items: start;\n}\n\n.location-details {\n    margin-bottom: var(--spacing-xl);\n}\n\n.location-item {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-md);\n    margin-bottom: var(--spacing-md);\n    font-size: 1rem;\n}\n\n.location-item i {\n    color: var(--primary-green);\n    width: 20px;\n}\n\n.map-search {\n    display: flex;\n    gap: var(--spacing-sm);\n    margin-bottom: var(--spacing-lg);\n}\n\n.search-input {\n    flex: 1;\n    padding: var(--spacing-sm) var(--spacing-md);\n    border: 2px solid #ddd;\n    border-radius: var(--radius-md);\n    font-size: 1rem;\n    transition: border-color 0.3s ease;\n}\n\n.search-input:focus {\n    outline: none;\n    border-color: var(--primary-green);\n}\n\n.search-btn {\n    background: var(--primary-green);\n    color: white;\n    border: none;\n    padding: var(--spacing-sm) var(--spacing-md);\n    border-radius: var(--radius-md);\n    cursor: pointer;\n    transition: background 0.3s ease;\n}\n\n.search-btn:hover {\n    background: var(--primary-green-hover);\n}\n\n.map-container {\n    position: relative;\n    border-radius: var(--radius-lg);\n    overflow: hidden;\n    box-shadow: var(--shadow-lg);\n}\n\n.map {\n    width: 100%;\n    height: 400px;\n}\n\n/* Contact Section */\n.contact {\n    padding: var(--spacing-2xl) 0;\n    background: var(--light-green);\n}\n\n.contact-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-2xl);\n}\n\n.contact-description {\n    font-size: 1.1rem;\n    color: #666;\n    margin-bottom: var(--spacing-xl);\n    line-height: 1.6;\n}\n\n.contact-methods {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-lg);\n}\n\n.contact-method {\n    display: flex;\n    align-items: flex-start;\n    gap: var(--spacing-md);\n    padding: var(--spacing-lg);\n    background: white;\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-sm);\n}\n\n.contact-method i {\n    color: var(--primary-green);\n    font-size: 1.25rem;\n    margin-top: 4px;\n}\n\n.contact-method div {\n    display: flex;\n    flex-direction: column;\n}\n\n.contact-method strong {\n    color: var(--dark-forest);\n    margin-bottom: var(--spacing-xs);\n}\n\n.contact-method span {\n    color: #666;\n}\n\n.contact-form {\n    background: white;\n    padding: var(--spacing-xl);\n    border-radius: var(--radius-lg);\n    box-shadow: var(--shadow-md);\n}\n\n.form-group {\n    margin-bottom: var(--spacing-lg);\n}\n\n.form-group input,\n.form-group select,\n.form-group textarea {\n    width: 100%;\n    padding: var(--spacing-md);\n    border: 2px solid #ddd;\n    border-radius: var(--radius-md);\n    font-size: 1rem;\n    font-family: inherit;\n    transition: border-color 0.3s ease;\n}\n\n.form-group input:focus,\n.form-group select:focus,\n.form-group textarea:focus {\n    outline: none;\n    border-color: var(--primary-green);\n}\n\n.form-group textarea {\n    resize: vertical;\n    min-height: 100px;\n}\n\n/* Footer */\n.footer {\n    background: var(--dark-forest);\n    color: white;\n    padding: var(--spacing-2xl) 0 var(--spacing-lg);\n}\n\n.footer-content {\n    display: grid;\n    grid-template-columns: 2fr 1fr 1fr 1fr;\n    gap: var(--spacing-2xl);\n    margin-bottom: var(--spacing-xl);\n}\n\n.footer-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: var(--primary-green);\n    margin-bottom: var(--spacing-md);\n}\n\n.footer-subtitle {\n    font-size: 1.1rem;\n    font-weight: 600;\n    margin-bottom: var(--spacing-md);\n}\n\n.footer-text {\n    color: #ccc;\n    line-height: 1.6;\n    margin-bottom: var(--spacing-lg);\n}\n\n.social-links {\n    display: flex;\n    gap: var(--spacing-md);\n}\n\n.social-link {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 40px;\n    height: 40px;\n    background: var(--primary-green);\n    color: white;\n    border-radius: 50%;\n    text-decoration: none;\n    transition: all 0.3s ease;\n}\n\n.social-link:hover {\n    background: var(--primary-green-hover);\n    transform: translateY(-2px);\n}\n\n.footer-links {\n    list-style: none;\n}\n\n.footer-links li {\n    margin-bottom: var(--spacing-sm);\n}\n\n.footer-links a {\n    color: #ccc;\n    text-decoration: none;\n    transition: color 0.3s ease;\n}\n\n.footer-links a:hover {\n    color: var(--primary-green);\n}\n\n.footer-contact p {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n    margin-bottom: var(--spacing-sm);\n    color: #ccc;\n}\n\n.footer-contact i {\n    color: var(--primary-green);\n    width: 20px;\n}\n\n.footer-bottom {\n    text-align: center;\n    padding-top: var(--spacing-lg);\n    border-top: 1px solid #444;\n    color: #999;\n}\n\n/* Modal Styles */\n.modal {\n    display: none;\n    position: fixed;\n    z-index: 2000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    backdrop-filter: blur(5px);\n}\n\n.modal.show {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: var(--spacing-lg);\n}\n\n.modal-content {\n    background: white;\n    border-radius: var(--radius-lg);\n    max-width: 900px;\n    width: 100%;\n    max-height: 90vh;\n    overflow-y: auto;\n    animation: modalSlideIn 0.3s ease;\n}\n\n.modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: var(--spacing-lg);\n    border-bottom: 1px solid #eee;\n}\n\n.modal-title {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: var(--dark-forest);\n    margin: 0;\n}\n\n.modal-close {\n    background: none;\n    border: none;\n    font-size: 2rem;\n    color: #999;\n    cursor: pointer;\n    padding: 0;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    transition: all 0.3s ease;\n}\n\n.modal-close:hover {\n    background: #f5f5f5;\n    color: #333;\n}\n\n.modal-body {\n    padding: var(--spacing-lg);\n}\n\n.package-modal-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-xl);\n}\n\n.package-gallery {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-md);\n}\n\n.main-image {\n    width: 100%;\n    height: 250px;\n    object-fit: cover;\n    border-radius: var(--radius-md);\n}\n\n.thumbnail-grid {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: var(--spacing-sm);\n}\n\n.thumbnail {\n    width: 100%;\n    height: 80px;\n    object-fit: cover;\n    border-radius: var(--radius-sm);\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.thumbnail:hover {\n    transform: scale(1.1);\n}\n\n.package-details {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-lg);\n}\n\n.package-meta {\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-md);\n    align-items: center;\n}\n\n.package-meta > div {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n    color: #666;\n}\n\n.package-meta i {\n    color: var(--primary-green);\n}\n\n.package-highlights,\n.package-includes {\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-sm);\n}\n\n.package-highlights h4,\n.package-includes h4 {\n    font-size: 1.1rem;\n    font-weight: bold;\n    color: var(--dark-forest);\n    margin-bottom: var(--spacing-sm);\n}\n\n.package-highlights ul,\n.package-includes ul {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: var(--spacing-sm);\n}\n\n.package-highlights li,\n.package-includes li {\n    display: flex;\n    align-items: center;\n    gap: var(--spacing-sm);\n    color: #666;\n}\n\n.package-highlights li i,\n.package-includes li::before {\n    color: var(--primary-green);\n}\n\n.package-includes li::before {\n    content: '●';\n    font-weight: bold;\n}\n\n.package-pricing {\n    background: #f8f9fa;\n    padding: var(--spacing-lg);\n    border-radius: var(--radius-md);\n    text-align: center;\n}\n\n.package-pricing .price {\n    font-size: 2rem;\n    font-weight: bold;\n    color: var(--primary-green);\n    margin-bottom: var(--spacing-sm);\n}\n\n.package-pricing .price-unit {\n    font-size: 0.875rem;\n    color: #666;\n}\n\n.package-actions {\n    display: flex;\n    gap: var(--spacing-md);\n    margin-top: var(--spacing-lg);\n}\n\n.package-actions .btn-primary,\n.package-actions .btn-secondary {\n    flex: 1;\n    text-align: center;\n    justify-content: center;\n}\n\n/* QR Scanner Styles */\n.qr-modal-content {\n    max-width: 500px;\n}\n\n.qr-reader {\n    width: 100%;\n    max-width: 400px;\n    margin: 0 auto;\n}\n\n.qr-results {\n    margin-top: var(--spacing-lg);\n    padding: var(--spacing-md);\n    background: var(--light-green);\n    border-radius: var(--radius-md);\n    text-align: center;\n    display: none;\n}\n\n.qr-results.show {\n    display: block;\n}\n\n/* Animations */\n@keyframes modalSlideIn {\n    from {\n        opacity: 0;\n        transform: translateY(-50px) scale(0.9);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n    }\n}\n\n@keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.fade-in {\n    animation: fadeIn 0.5s ease;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .nav-menu {\n        position: fixed;\n        top: 70px;\n        right: -100%;\n        width: 80%;\n        height: calc(100vh - 70px);\n        background: white;\n        flex-direction: column;\n        padding: var(--spacing-xl);\n        transition: right 0.3s ease;\n        box-shadow: var(--shadow-lg);\n    }\n    \n    .nav-menu.active {\n        right: 0;\n    }\n    \n    .hamburger {\n        display: flex;\n    }\n    \n    .hamburger.active span:nth-child(1) {\n        transform: rotate(45deg) translate(5px, 5px);\n    }\n    \n    .hamburger.active span:nth-child(2) {\n        opacity: 0;\n    }\n    \n    .hamburger.active span:nth-child(3) {\n        transform: rotate(-45deg) translate(7px, -6px);\n    }\n    \n    .hero {\n        flex-direction: column;\n        text-align: center;\n        padding: var(--spacing-xl) var(--spacing-lg);\n    }\n    \n    .hero-title {\n        font-size: 2rem;\n    }\n    \n    .hero-buttons {\n        justify-content: center;\n    }\n    \n    .about-grid {\n        grid-template-columns: 1fr;\n        text-align: center;\n    }\n    \n    .company-stats {\n        justify-content: center;\n    }\n    \n    .packages-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .map-content {\n        grid-template-columns: 1fr;\n    }\n    \n    .contact-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .footer-content {\n        grid-template-columns: 1fr;\n        text-align: center;\n    }\n    \n    .package-modal-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .package-actions {\n        flex-direction: column;\n    }\n}\n\n@media (max-width: 480px) {\n    .container {\n        padding: 0 var(--spacing-md);\n    }\n    \n    .hero-title {\n        font-size: 1.75rem;\n    }\n    \n    .section-title {\n        font-size: 2rem;\n    }\n    \n    .packages-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .package-card {\n        margin: 0 var(--spacing-sm);\n    }\n    \n    .modal-content {\n        margin: var(--spacing-md);\n        max-height: calc(100vh - 2rem);\n    }\n}\n\n/* Utility Classes */\n.text-center { text-align: center; }\n.text-left { text-align: left; }\n.text-right { text-align: right; }\n\n.hidden { display: none !important; }\n.visible { display: block !important; }\n\n.mb-0 { margin-bottom: 0 !important; }\n.mb-sm { margin-bottom: var(--spacing-sm) !important; }\n.mb-md { margin-bottom: var(--spacing-md) !important; }\n.mb-lg { margin-bottom: var(--spacing-lg) !important; }\n\n.mt-0 { margin-top: 0 !important; }\n.mt-sm { margin-top: var(--spacing-sm) !important; }\n.mt-md { margin-top: var(--spacing-md) !important; }\n.mt-lg { margin-top: var(--spacing-lg) !important; }\n\n/* Loading States */\n.loading {\n    opacity: 0.6;\n    pointer-events: none;\n}\n\n.spinner {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border: 2px solid #f3f3f3;\n    border-top: 2px solid var(--primary-green);\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}","size_bytes":20999},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/midtrans.ts":{"content":"// @ts-ignore - midtrans-client doesn't have TypeScript definitions\nimport midtransClient from 'midtrans-client';\nimport { v4 as uuidv4 } from 'uuid';\nimport type { PaymentMethod } from '@shared/schema';\n\nexport interface MidtransConfig {\n  serverKey: string;\n  clientKey: string;\n  isProduction: boolean;\n}\n\nexport interface PaymentRequest {\n  orderId: string;\n  amount: number;\n  customerDetails: {\n    first_name: string;\n    last_name?: string;\n    email: string;\n    phone: string;\n  };\n  itemDetails: {\n    id: string;\n    price: number;\n    quantity: number;\n    name: string;\n  }[];\n  paymentMethod?: PaymentMethod;\n}\n\nexport interface PaymentResponse {\n  token: string;\n  redirect_url: string;\n  order_id: string;\n  gross_amount: string;\n  payment_type?: string;\n  transaction_status: string;\n  fraud_status?: string;\n}\n\nclass MidtransService {\n  private snap: any;\n  private core: any;\n  \n  constructor(config: MidtransConfig) {\n    // Initialize Snap API for payment UI\n    this.snap = new midtransClient.Snap({\n      isProduction: config.isProduction,\n      serverKey: config.serverKey,\n      clientKey: config.clientKey\n    });\n    \n    // Initialize Core API for direct API calls\n    this.core = new midtransClient.CoreApi({\n      isProduction: config.isProduction,\n      serverKey: config.serverKey,\n      clientKey: config.clientKey\n    });\n  }\n\n  /**\n   * Create payment transaction with Midtrans\n   */\n  async createTransaction(paymentRequest: PaymentRequest): Promise<PaymentResponse> {\n    try {\n      const transactionDetails = {\n        transaction_details: {\n          order_id: paymentRequest.orderId,\n          gross_amount: paymentRequest.amount\n        },\n        customer_details: {\n          first_name: paymentRequest.customerDetails.first_name,\n          last_name: paymentRequest.customerDetails.last_name || '',\n          email: paymentRequest.customerDetails.email,\n          phone: paymentRequest.customerDetails.phone\n        },\n        item_details: paymentRequest.itemDetails,\n        credit_card: {\n          secure: true\n        },\n        // Enable specific payment methods\n        enabled_payments: this.getEnabledPayments(paymentRequest.paymentMethod),\n        custom_expiry: {\n          order_time: new Date().toISOString(),\n          expiry_duration: 24,\n          unit: \"hour\"\n        }\n      };\n\n      console.log('Creating Midtrans transaction:', JSON.stringify(transactionDetails, null, 2));\n      \n      const transaction = await this.snap.createTransaction(transactionDetails);\n      \n      return {\n        token: transaction.token,\n        redirect_url: transaction.redirect_url,\n        order_id: paymentRequest.orderId,\n        gross_amount: paymentRequest.amount.toString(),\n        transaction_status: 'pending'\n      };\n    } catch (error: any) {\n      console.error('Midtrans transaction creation failed:', error);\n      throw new Error(`Payment creation failed: ${error?.message || 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Get transaction status from Midtrans\n   */\n  async getTransactionStatus(orderId: string): Promise<any> {\n    try {\n      const response = await this.core.transaction.status(orderId);\n      return response;\n    } catch (error: any) {\n      console.error('Failed to get transaction status:', error);\n      throw new Error(`Failed to get payment status: ${error?.message || 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Cancel transaction\n   */\n  async cancelTransaction(orderId: string): Promise<any> {\n    try {\n      const response = await this.core.transaction.cancel(orderId);\n      return response;\n    } catch (error: any) {\n      console.error('Failed to cancel transaction:', error);\n      throw new Error(`Failed to cancel payment: ${error?.message || 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Expire transaction\n   */\n  async expireTransaction(orderId: string): Promise<any> {\n    try {\n      const response = await this.core.transaction.expire(orderId);\n      return response;\n    } catch (error: any) {\n      console.error('Failed to expire transaction:', error);\n      throw new Error(`Failed to expire payment: ${error?.message || 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Verify webhook notification\n   */\n  verifyNotification(notification: any): boolean {\n    try {\n      const serverKey = this.snap.apiConfig.serverKey;\n      const orderId = notification.order_id;\n      const statusCode = notification.status_code;\n      const grossAmount = notification.gross_amount;\n      \n      const input = orderId + statusCode + grossAmount + serverKey;\n      const crypto = require('crypto');\n      const hash = crypto.createHash('sha512').update(input).digest('hex');\n      \n      return hash === notification.signature_key;\n    } catch (error) {\n      console.error('Webhook verification failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get enabled payment methods based on preference\n   */\n  private getEnabledPayments(preferredMethod?: PaymentMethod): string[] {\n    const allMethods = [\n      \"gopay\", \"shopeepay\", \"ovo\", \"dana\", \"linkaja\", // E-wallets\n      \"qris\", // QR Code\n      \"permata_va\", \"bca_va\", \"bni_va\", \"bri_va\", \"other_va\", // Virtual Account\n      \"credit_card\", // Credit Card\n      \"cstore\", // Convenience Store\n      \"akulaku\" // Credit\n    ];\n\n    if (preferredMethod) {\n      // If specific method requested, prioritize it but allow others as fallback\n      const methodMap: Record<PaymentMethod, string[]> = {\n        \"gopay\": [\"gopay\"],\n        \"ovo\": [\"ovo\"], \n        \"qris\": [\"qris\"],\n        \"shopeepay\": [\"shopeepay\"],\n        \"dana\": [\"dana\"],\n        \"linkaja\": [\"linkaja\"],\n        \"bank_transfer\": [\"permata_va\", \"bca_va\", \"bni_va\", \"bri_va\"],\n        \"credit_card\": [\"credit_card\"]\n      };\n\n      return methodMap[preferredMethod] || allMethods;\n    }\n\n    return allMethods;\n  }\n\n  /**\n   * Format transaction for database storage\n   */\n  formatTransactionResponse(response: any) {\n    return {\n      transaction_id: response.transaction_id,\n      order_id: response.order_id,\n      payment_type: response.payment_type,\n      transaction_status: response.transaction_status,\n      fraud_status: response.fraud_status,\n      gross_amount: response.gross_amount,\n      currency: response.currency || 'IDR',\n      transaction_time: response.transaction_time,\n      settlement_time: response.settlement_time,\n      status_code: response.status_code,\n      status_message: response.status_message\n    };\n  }\n}\n\n// Create singleton instance\nlet midtransService: MidtransService | null = null;\n\nexport function createMidtransService(): MidtransService {\n  if (!midtransService) {\n    const config: MidtransConfig = {\n      serverKey: process.env.MIDTRANS_SERVER_KEY || '',\n      clientKey: process.env.MIDTRANS_CLIENT_KEY || '',\n      isProduction: process.env.NODE_ENV === 'production'\n    };\n\n    if (!config.serverKey || !config.clientKey) {\n      throw new Error('Midtrans API keys are required. Please set MIDTRANS_SERVER_KEY and MIDTRANS_CLIENT_KEY environment variables.');\n    }\n\n    midtransService = new MidtransService(config);\n  }\n\n  return midtransService;\n}\n\nexport function generateOrderId(prefix: string = 'RRT'): string {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 8).toUpperCase();\n  return `${prefix}-${timestamp}-${random}`;\n}\n\nexport default MidtransService;","size_bytes":7358},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertInquirySchema, insertTravelPackageSchema, insertBookingSchema, insertPaymentSchema } from \"@shared/schema\";\nimport { createMidtransService, generateOrderId } from \"./midtrans\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Travel Packages routes\n  app.get(\"/api/packages\", async (req, res) => {\n    try {\n      const packages = await storage.getTravelPackages();\n      res.json(packages);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch travel packages\" });\n    }\n  });\n\n  app.get(\"/api/packages/:id\", async (req, res) => {\n    try {\n      const pkg = await storage.getTravelPackage(req.params.id);\n      if (!pkg) {\n        return res.status(404).json({ message: \"Travel package not found\" });\n      }\n      res.json(pkg);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch travel package\" });\n    }\n  });\n\n  app.post(\"/api/packages\", async (req, res) => {\n    try {\n      const result = insertTravelPackageSchema.safeParse(req.body);\n      if (!result.success) {\n        return res.status(400).json({ message: \"Invalid package data\", errors: result.error.errors });\n      }\n\n      const pkg = await storage.createTravelPackage(result.data);\n      res.status(201).json(pkg);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to create travel package\" });\n    }\n  });\n\n  // Inquiries routes\n  app.get(\"/api/inquiries\", async (req, res) => {\n    try {\n      const inquiries = await storage.getInquiries();\n      res.json(inquiries);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch inquiries\" });\n    }\n  });\n\n  app.post(\"/api/inquiries\", async (req, res) => {\n    try {\n      const result = insertInquirySchema.safeParse(req.body);\n      if (!result.success) {\n        return res.status(400).json({ message: \"Invalid inquiry data\", errors: result.error.errors });\n      }\n\n      const inquiry = await storage.createInquiry(result.data);\n      res.status(201).json(inquiry);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to create inquiry\" });\n    }\n  });\n\n  // Bookings routes\n  app.get(\"/api/bookings\", async (req, res) => {\n    try {\n      const bookings = await storage.getBookings();\n      res.json(bookings);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch bookings\" });\n    }\n  });\n\n  app.get(\"/api/bookings/:id\", async (req, res) => {\n    try {\n      const booking = await storage.getBooking(req.params.id);\n      if (!booking) {\n        return res.status(404).json({ message: \"Booking not found\" });\n      }\n      res.json(booking);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch booking\" });\n    }\n  });\n\n  app.post(\"/api/bookings\", async (req, res) => {\n    try {\n      const result = insertBookingSchema.safeParse(req.body);\n      if (!result.success) {\n        return res.status(400).json({ message: \"Invalid booking data\", errors: result.error.errors });\n      }\n\n      const booking = await storage.createBooking(result.data);\n      res.status(201).json(booking);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to create booking\" });\n    }\n  });\n\n  // Payment routes\n  app.post(\"/api/payments/create\", async (req, res) => {\n    try {\n      const { bookingId, customerDetails, paymentMethod } = req.body;\n      \n      // Get booking details\n      const booking = await storage.getBooking(bookingId);\n      if (!booking) {\n        return res.status(404).json({ message: \"Booking not found\" });\n      }\n\n      // Get travel package details\n      const travelPackage = await storage.getTravelPackage(booking.packageId);\n      if (!travelPackage) {\n        return res.status(404).json({ message: \"Travel package not found\" });\n      }\n\n      // Check for environment variables\n      if (!process.env.MIDTRANS_SERVER_KEY || !process.env.MIDTRANS_CLIENT_KEY) {\n        return res.status(500).json({ \n          message: \"Payment service configuration missing\",\n          error: \"Midtrans API keys not configured\"\n        });\n      }\n\n      // Create Midtrans service\n      const midtransService = createMidtransService();\n      const orderId = generateOrderId();\n\n      // Create payment record first\n      const paymentResult = insertPaymentSchema.safeParse({\n        bookingId,\n        orderId,\n        amount: booking.totalAmount,\n        paymentMethod: paymentMethod || 'qris',\n        status: 'pending'\n      });\n\n      if (!paymentResult.success) {\n        return res.status(400).json({ message: \"Invalid payment data\", errors: paymentResult.error.errors });\n      }\n\n      const payment = await storage.createPayment(paymentResult.data);\n\n      // Create Midtrans transaction\n      const paymentRequest = {\n        orderId,\n        amount: parseInt(booking.totalAmount),\n        customerDetails: {\n          first_name: customerDetails?.firstName || booking.customerName.split(' ')[0],\n          last_name: customerDetails?.lastName || booking.customerName.split(' ').slice(1).join(' '),\n          email: customerDetails?.email || booking.customerEmail,\n          phone: customerDetails?.phone || booking.customerPhone\n        },\n        itemDetails: [{\n          id: travelPackage.id,\n          price: parseInt(booking.totalAmount),\n          quantity: 1,\n          name: `${travelPackage.name} - ${booking.numberOfPeople} orang`\n        }],\n        paymentMethod\n      };\n\n      const transactionResponse = await midtransService.createTransaction(paymentRequest);\n\n      res.json({\n        payment,\n        transaction: transactionResponse\n      });\n\n    } catch (error: any) {\n      console.error(\"Error creating payment:\", error);\n      res.status(500).json({ \n        message: \"Failed to create payment\", \n        error: error?.message || 'Unknown error'\n      });\n    }\n  });\n\n  app.get(\"/api/payments/:id\", async (req, res) => {\n    try {\n      const payment = await storage.getPayment(req.params.id);\n      if (!payment) {\n        return res.status(404).json({ message: \"Payment not found\" });\n      }\n      res.json(payment);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch payment\" });\n    }\n  });\n\n  // Midtrans webhook handler\n  app.post(\"/api/payments/webhook\", async (req, res) => {\n    try {\n      const notification = req.body;\n      console.log('Received Midtrans webhook:', notification);\n\n      // Check for environment variables\n      if (!process.env.MIDTRANS_SERVER_KEY || !process.env.MIDTRANS_CLIENT_KEY) {\n        return res.status(500).json({ message: \"Payment service not configured\" });\n      }\n\n      // Verify webhook signature\n      const midtransService = createMidtransService();\n      const isValid = midtransService.verifyNotification(notification);\n      \n      if (!isValid) {\n        console.error('Invalid webhook signature');\n        return res.status(400).json({ message: \"Invalid signature\" });\n      }\n\n      // Get payment by order ID\n      const payment = await storage.getPaymentByOrderId(notification.order_id);\n      if (!payment) {\n        console.error('Payment not found for order:', notification.order_id);\n        return res.status(404).json({ message: \"Payment not found\" });\n      }\n\n      // Update payment status based on notification\n      let newStatus = 'pending';\n      switch (notification.transaction_status) {\n        case 'capture':\n        case 'settlement':\n          newStatus = 'completed';\n          break;\n        case 'pending':\n          newStatus = 'pending';\n          break;\n        case 'deny':\n        case 'cancel':\n        case 'expire':\n          newStatus = 'failed';\n          break;\n        case 'failure':\n          newStatus = 'failed';\n          break;\n      }\n\n      // Update payment with transaction data\n      const transactionData = midtransService.formatTransactionResponse(notification);\n      await storage.updatePaymentStatus(payment.id, newStatus, transactionData);\n\n      // Update booking status if payment is completed\n      if (newStatus === 'completed') {\n        await storage.updateBookingStatus(payment.bookingId, 'confirmed');\n      } else if (newStatus === 'failed') {\n        await storage.updateBookingStatus(payment.bookingId, 'cancelled');\n      }\n\n      res.json({ message: \"Webhook processed successfully\" });\n\n    } catch (error: any) {\n      console.error(\"Error processing webhook:\", error);\n      res.status(500).json({ \n        message: \"Failed to process webhook\", \n        error: error?.message || 'Unknown error'\n      });\n    }\n  });\n\n  // Environment variables endpoint\n  app.get(\"/api/config\", async (req, res) => {\n    try {\n      res.json({\n        mapboxToken: process.env.MAPBOX_PUBLIC_KEY || ''\n      });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to get config\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":9014},"server/storage.ts":{"content":"import { type User, type InsertUser, type TravelPackage, type InsertTravelPackage, type Inquiry, type InsertInquiry, type Booking, type InsertBooking, type Payment, type InsertPayment } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  getTravelPackages(): Promise<TravelPackage[]>;\n  getTravelPackage(id: string): Promise<TravelPackage | undefined>;\n  createTravelPackage(pkg: InsertTravelPackage): Promise<TravelPackage>;\n  \n  getInquiries(): Promise<Inquiry[]>;\n  createInquiry(inquiry: InsertInquiry): Promise<Inquiry>;\n  \n  // Booking operations\n  getBookings(): Promise<Booking[]>;\n  getBooking(id: string): Promise<Booking | undefined>;\n  getBookingsByUser(userId: string): Promise<Booking[]>;\n  createBooking(booking: InsertBooking): Promise<Booking>;\n  updateBookingStatus(id: string, status: string): Promise<Booking | undefined>;\n  \n  // Payment operations\n  getPayments(): Promise<Payment[]>;\n  getPayment(id: string): Promise<Payment | undefined>;\n  getPaymentByOrderId(orderId: string): Promise<Payment | undefined>;\n  createPayment(payment: InsertPayment): Promise<Payment>;\n  updatePaymentStatus(id: string, status: string, transactionData?: any): Promise<Payment | undefined>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private travelPackages: Map<string, TravelPackage>;\n  private inquiries: Map<string, Inquiry>;\n  private bookings: Map<string, Booking>;\n  private payments: Map<string, Payment>;\n\n  constructor() {\n    this.users = new Map();\n    this.travelPackages = new Map();\n    this.inquiries = new Map();\n    this.bookings = new Map();\n    this.payments = new Map();\n    \n    // Initialize with sample travel packages\n    this.initializeSampleData();\n  }\n\n  private initializeSampleData() {\n    const samplePackages: InsertTravelPackage[] = [\n      {\n        name: \"Bali Budaya & Alam\",\n        description: \"Jelajahi keindahan sawah terasering Jatiluwih, Pura Tanah Lot, dan budaya Bali yang autentik\",\n        duration: \"3D2N\",\n        price: 2850000,\n        rating: 5,\n        imageUrl: \"https://images.unsplash.com/photo-1537953773345-d172ccf13cf1?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Bali\"\n      },\n      {\n        name: \"Yogya Heritage Tour\",\n        description: \"Eksplorasi Candi Borobudur, Prambanan, Keraton Yogya, dan kuliner legendaris Gudeg\",\n        duration: \"4D3N\",\n        price: 1950000,\n        rating: 5,\n        imageUrl: \"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Yogyakarta\"\n      },\n      {\n        name: \"Lombok Paradise\",\n        description: \"Nikmati keindahan Pantai Senggigi, Gili Trawangan, dan pendakian Gunung Rinjani\",\n        duration: \"5D4N\",\n        price: 3450000,\n        rating: 4,\n        imageUrl: \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        location: \"Lombok\"\n      }\n    ];\n\n    samplePackages.forEach(pkg => {\n      this.createTravelPackage(pkg);\n    });\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getTravelPackages(): Promise<TravelPackage[]> {\n    return Array.from(this.travelPackages.values());\n  }\n\n  async getTravelPackage(id: string): Promise<TravelPackage | undefined> {\n    return this.travelPackages.get(id);\n  }\n\n  async createTravelPackage(insertPackage: InsertTravelPackage): Promise<TravelPackage> {\n    const id = randomUUID();\n    const pkg: TravelPackage = { \n      ...insertPackage, \n      id,\n      rating: insertPackage.rating || 5,\n      createdAt: new Date()\n    };\n    this.travelPackages.set(id, pkg);\n    return pkg;\n  }\n\n  async getInquiries(): Promise<Inquiry[]> {\n    return Array.from(this.inquiries.values());\n  }\n\n  async createInquiry(insertInquiry: InsertInquiry): Promise<Inquiry> {\n    const id = randomUUID();\n    const inquiry: Inquiry = { \n      ...insertInquiry, \n      id,\n      destination: insertInquiry.destination || null,\n      createdAt: new Date()\n    };\n    this.inquiries.set(id, inquiry);\n    return inquiry;\n  }\n\n  // Booking operations\n  async getBookings(): Promise<Booking[]> {\n    return Array.from(this.bookings.values());\n  }\n\n  async getBooking(id: string): Promise<Booking | undefined> {\n    return this.bookings.get(id);\n  }\n\n  async getBookingsByUser(userId: string): Promise<Booking[]> {\n    return Array.from(this.bookings.values()).filter(\n      booking => booking.userId === userId\n    );\n  }\n\n  async createBooking(insertBooking: InsertBooking): Promise<Booking> {\n    const id = randomUUID();\n    const booking: Booking = {\n      ...insertBooking,\n      id,\n      status: insertBooking.status || 'pending',\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.bookings.set(id, booking);\n    return booking;\n  }\n\n  async updateBookingStatus(id: string, status: string): Promise<Booking | undefined> {\n    const booking = this.bookings.get(id);\n    if (booking) {\n      booking.status = status;\n      booking.updatedAt = new Date();\n      this.bookings.set(id, booking);\n    }\n    return booking;\n  }\n\n  // Payment operations\n  async getPayments(): Promise<Payment[]> {\n    return Array.from(this.payments.values());\n  }\n\n  async getPayment(id: string): Promise<Payment | undefined> {\n    return this.payments.get(id);\n  }\n\n  async getPaymentByOrderId(orderId: string): Promise<Payment | undefined> {\n    return Array.from(this.payments.values()).find(\n      payment => payment.orderId === orderId\n    );\n  }\n\n  async createPayment(insertPayment: InsertPayment): Promise<Payment> {\n    const id = randomUUID();\n    const payment: Payment = {\n      ...insertPayment,\n      id,\n      status: insertPayment.status || 'pending',\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.payments.set(id, payment);\n    return payment;\n  }\n\n  async updatePaymentStatus(id: string, status: string, transactionData?: any): Promise<Payment | undefined> {\n    const payment = this.payments.get(id);\n    if (payment) {\n      payment.status = status;\n      payment.updatedAt = new Date();\n      if (transactionData) {\n        payment.transactionId = transactionData.transaction_id;\n        payment.paymentType = transactionData.payment_type;\n        payment.fraudStatus = transactionData.fraud_status;\n        if (transactionData.settlement_time) {\n          payment.paidAt = new Date(transactionData.settlement_time);\n        }\n      }\n      this.payments.set(id, payment);\n    }\n    return payment;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":7181},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, decimal, boolean, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const travelPackages = pgTable(\"travel_packages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  duration: text(\"duration\").notNull(),\n  price: integer(\"price\").notNull(),\n  rating: integer(\"rating\").notNull().default(5),\n  imageUrl: text(\"image_url\").notNull(),\n  location: text(\"location\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const inquiries = pgTable(\"inquiries\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  destination: text(\"destination\"),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const bookings = pgTable(\"bookings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  packageId: varchar(\"package_id\").notNull(),\n  customerName: text(\"customer_name\").notNull(),\n  customerEmail: text(\"customer_email\").notNull(),\n  customerPhone: text(\"customer_phone\").notNull(),\n  travelDate: timestamp(\"travel_date\").notNull(),\n  numberOfPeople: integer(\"number_of_people\").notNull().default(1),\n  totalAmount: decimal(\"total_amount\", { precision: 12, scale: 2 }).notNull(),\n  specialRequests: text(\"special_requests\"),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, confirmed, cancelled, completed\n  paymentId: varchar(\"payment_id\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const payments = pgTable(\"payments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  bookingId: varchar(\"booking_id\").notNull(),\n  midtransOrderId: text(\"midtrans_order_id\").notNull().unique(),\n  amount: decimal(\"amount\", { precision: 12, scale: 2 }).notNull(),\n  currency: text(\"currency\").notNull().default(\"IDR\"),\n  paymentMethod: text(\"payment_method\"), // gopay, ovo, qris, bank_transfer, etc\n  status: text(\"status\").notNull().default(\"pending\"), // pending, settlement, cancel, expire, failure\n  midtransResponse: jsonb(\"midtrans_response\"),\n  paidAt: timestamp(\"paid_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n});\n\nexport const insertTravelPackageSchema = createInsertSchema(travelPackages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertInquirySchema = createInsertSchema(inquiries).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertBookingSchema = createInsertSchema(bookings).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertPaymentSchema = createInsertSchema(payments).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  paidAt: true,\n});\n\n// Custom validation schemas\nexport const bookingRequestSchema = z.object({\n  packageId: z.string().min(1, \"Package ID is required\"),\n  customerName: z.string().min(2, \"Name must be at least 2 characters\"),\n  customerEmail: z.string().email(\"Valid email is required\"),\n  customerPhone: z.string().min(10, \"Valid phone number is required\"),\n  travelDate: z.string().refine((date) => new Date(date) > new Date(), {\n    message: \"Travel date must be in the future\"\n  }),\n  numberOfPeople: z.number().min(1, \"At least 1 person is required\").max(50, \"Maximum 50 people\"),\n  specialRequests: z.string().optional(),\n});\n\nexport const paymentMethodSchema = z.enum([\n  \"gopay\",\n  \"ovo\", \n  \"qris\",\n  \"bank_transfer\",\n  \"credit_card\",\n  \"shopeepay\",\n  \"dana\",\n  \"linkaja\"\n]);\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertTravelPackage = z.infer<typeof insertTravelPackageSchema>;\nexport type TravelPackage = typeof travelPackages.$inferSelect;\nexport type InsertInquiry = z.infer<typeof insertInquirySchema>;\nexport type Inquiry = typeof inquiries.$inferSelect;\nexport type InsertBooking = z.infer<typeof insertBookingSchema>;\nexport type Booking = typeof bookings.$inferSelect;\nexport type InsertPayment = z.infer<typeof insertPaymentSchema>;\nexport type Payment = typeof payments.$inferSelect;\nexport type BookingRequest = z.infer<typeof bookingRequestSchema>;\nexport type PaymentMethod = z.infer<typeof paymentMethodSchema>;\n","size_bytes":4813},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport BookingPage from \"@/pages/booking\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/booking/:packageId\" component={BookingPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":809},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(210, 25%, 7.8431%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(210, 25%, 7.8431%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(210, 25%, 7.8431%);\n  --primary: hsl(137, 32%, 49%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(210, 25%, 7.8431%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 1.9608%, 90%);\n  --muted-foreground: hsl(210, 25%, 7.8431%);\n  --accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --accent-foreground: hsl(137, 32%, 49%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(201.4286, 30.4348%, 90.9804%);\n  --input: hsl(200, 23.0769%, 97.4510%);\n  --ring: hsl(137, 32%, 49%);\n  --chart-1: hsl(137, 32%, 49%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(137, 32%, 49%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(211.5789, 51.3514%, 92.7451%);\n  --sidebar-accent-foreground: hsl(137, 32%, 49%);\n  --sidebar-border: hsl(205.0000, 25.0000%, 90.5882%);\n  --sidebar-ring: hsl(137, 32%, 49%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1rem;\n  --primary-green: hsl(137, 32%, 49%);\n  --light-green: hsl(137, 68%, 78%);\n  --dark-forest: hsl(137, 45%, 9%);\n  --warm-brown: hsl(25, 64%, 47%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 6.6667%, 91.1765%);\n  --card: hsl(228, 9.8039%, 10%);\n  --card-foreground: hsl(0, 0%, 85.0980%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 6.6667%, 91.1765%);\n  --primary: hsl(137, 32%, 49%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(195.0000, 15.3846%, 94.9020%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(210, 3.3898%, 46.2745%);\n  --accent: hsl(205.7143, 70%, 7.8431%);\n  --accent-foreground: hsl(137, 32%, 49%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(137, 32%, 49%);\n  --chart-1: hsl(137, 32%, 49%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(228, 9.8039%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 85.0980%);\n  --sidebar-primary: hsl(137, 32%, 49%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(205.7143, 70%, 7.8431%);\n  --sidebar-accent-foreground: hsl(137, 32%, 49%);\n  --sidebar-border: hsl(205.7143, 15.7895%, 26.0784%);\n  --sidebar-ring: hsl(137, 32%, 49%);\n  --primary-green: hsl(137, 32%, 49%);\n  --light-green: hsl(137, 68%, 78%);\n  --dark-forest: hsl(137, 45%, 9%);\n  --warm-brown: hsl(25, 64%, 47%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer utilities {\n  .primary-green {\n    color: var(--primary-green);\n  }\n  \n  .bg-primary-green {\n    background-color: var(--primary-green);\n  }\n  \n  .border-primary-green {\n    border-color: var(--primary-green);\n  }\n  \n  .light-green {\n    color: var(--light-green);\n  }\n  \n  .bg-light-green {\n    background-color: var(--light-green);\n  }\n  \n  .dark-forest {\n    color: var(--dark-forest);\n  }\n  \n  .bg-dark-forest {\n    background-color: var(--dark-forest);\n  }\n  \n  .warm-brown {\n    color: var(--warm-brown);\n  }\n  \n  .bg-warm-brown {\n    background-color: var(--warm-brown);\n  }\n}\n","size_bytes":4101},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/about-section.tsx":{"content":"import ownerImage from \"@assets/IMG_20250506_100848-removebg-preview_1754716476473.png\";\n\nconst stats = [\n  { number: \"2,500+\", label: \"Happy Travelers\" },\n  { number: \"50+\", label: \"Destinasi\" },\n  { number: \"5+\", label: \"Tahun Pengalaman\" },\n  { number: \"4.8/5\", label: \"Rating Pelanggan\" }\n];\n\nexport default function AboutSection() {\n  return (\n    <section id=\"about\" className=\"py-16 bg-white\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          <div>\n            <h2 className=\"text-4xl font-bold text-dark-forest mb-6\">Tentang RR Travel</h2>\n            <p className=\"text-lg text-gray-600 mb-6 leading-relaxed\">\n              RR Travel didirikan dengan visi untuk memperkenalkan keindahan Indonesia kepada wisatawan domestik dan mancanegara. \n              Kami percaya bahwa setiap perjalanan adalah kesempatan untuk menciptakan kenangan yang tak terlupakan.\n            </p>\n            <p className=\"text-lg text-gray-600 mb-8 leading-relaxed\">\n              Dengan pengalaman lebih dari 5 tahun dalam industri pariwisata, kami telah melayani ribuan wisatawan dengan \n              kepuasan tinggi dan komitmen pada kualitas layanan terbaik.\n            </p>\n\n            {/* Owner Profile */}\n            <div className=\"bg-gray-50 rounded-default p-6\">\n              <div className=\"flex items-center space-x-4\">\n                <img \n                  src={ownerImage} \n                  alt=\"Reza Pahlawan - Founder RR Travel\" \n                  className=\"w-20 h-20 rounded-full object-cover shadow-lg\"\n                />\n                <div>\n                  <h4 className=\"text-xl font-bold text-dark-forest\">Reza Pahlawan</h4>\n                  <p className=\"text-primary-green font-medium\">Founder & CEO</p>\n                  <p className=\"text-gray-600 text-sm mt-1\">\n                    \"Passion saya adalah membantu orang mengeksplorasi keajaiban Indonesia dengan cara yang autentik dan berkesan\"\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <img \n              src=\"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&h=300\" \n              alt=\"Indonesian cultural landmarks\" \n              className=\"rounded-default shadow-lg\"\n            />\n            <img \n              src=\"https://images.unsplash.com/photo-1537953773345-d172ccf13cf1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&h=300\" \n              alt=\"Traditional Indonesian village\" \n              className=\"rounded-default shadow-lg mt-6\"\n            />\n            <img \n              src=\"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&h=300\" \n              alt=\"Indonesian traditional market\" \n              className=\"rounded-default shadow-lg\"\n            />\n            <img \n              src=\"https://images.unsplash.com/photo-1583212292454-1fe6229603b7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&h=300\" \n              alt=\"Indonesian temple architecture\" \n              className=\"rounded-default shadow-lg mt-6\"\n            />\n          </div>\n        </div>\n\n        {/* Stats Section */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 md:gap-8 mt-12 md:mt-16 text-center\">\n          {stats.map((stat, index) => (\n            <div key={index}>\n              <div className=\"text-4xl font-bold text-primary-green mb-2\">{stat.number}</div>\n              <p className=\"text-gray-600\">{stat.label}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3893},"client/src/components/contact-section.tsx":{"content":"import { useState } from \"react\";\nimport { MapPin, Phone, Mail, Clock, Facebook, Instagram, Twitter, Youtube } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface ContactForm {\n  name: string;\n  email: string;\n  phone: string;\n  destination: string;\n  message: string;\n}\n\nexport default function ContactSection() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [formData, setFormData] = useState<ContactForm>({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    destination: \"\",\n    message: \"\"\n  });\n\n  const submitInquiry = useMutation({\n    mutationFn: async (data: ContactForm) => {\n      return await apiRequest(\"POST\", \"/api/inquiries\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Pesan Terkirim!\",\n        description: \"Terima kasih! Pesan Anda telah terkirim. Kami akan menghubungi Anda segera.\",\n      });\n      setFormData({ name: \"\", email: \"\", phone: \"\", destination: \"\", message: \"\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/inquiries\"] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error\",\n        description: \"Gagal mengirim pesan. Silakan coba lagi.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!formData.name || !formData.email || !formData.phone || !formData.message) {\n      toast({\n        title: \"Error\",\n        description: \"Mohon lengkapi semua field yang wajib diisi.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    submitInquiry.mutate(formData);\n  };\n\n  const handleInputChange = (field: keyof ContactForm, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const contactInfo = [\n    {\n      icon: MapPin,\n      title: \"Alamat Kantor\",\n      content: \"Jl. Siti Mariah, Bandung 40231\\nIndonesia\"\n    },\n    {\n      icon: Phone,\n      title: \"Telepon\",\n      content: \"082115665661\"\n    },\n    {\n      icon: Mail,\n      title: \"Email\",\n      content: \"info@rrtravel.com\\nreservation@rrtravel.com\"\n    },\n    {\n      icon: Clock,\n      title: \"Jam Operasional\",\n      content: \"Senin - Jumat: 09.00 - 18.00\\nSabtu: 09.00 - 15.00\"\n    }\n  ];\n\n  const socialLinks = [\n    { icon: Facebook, href: \"#\" },\n    { icon: Instagram, href: \"#\" },\n    { icon: Twitter, href: \"#\" },\n    { icon: Youtube, href: \"#\" }\n  ];\n\n  return (\n    <section id=\"contact\" className=\"py-16 bg-white\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-4xl font-bold text-dark-forest mb-4\">Hubungi Kami</h2>\n          <p className=\"text-xl text-gray-600\">Siap merencanakan liburan impian Anda? Mari diskusikan kebutuhan wisata Anda</p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          {/* Contact Information */}\n          <div>\n            <div className=\"space-y-8\">\n              {contactInfo.map((info, index) => {\n                const IconComponent = info.icon;\n                return (\n                  <div key={index} className=\"flex items-start space-x-4\">\n                    <div className=\"bg-primary-green text-white w-12 h-12 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <IconComponent className=\"w-6 h-6\" />\n                    </div>\n                    <div>\n                      <h4 className=\"text-xl font-bold text-dark-forest mb-2\">{info.title}</h4>\n                      <p className=\"text-gray-600 whitespace-pre-line\">{info.content}</p>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Social Media */}\n            <div className=\"mt-8\">\n              <h4 className=\"text-xl font-bold text-dark-forest mb-4\">Ikuti Kami</h4>\n              <div className=\"flex space-x-4\">\n                {socialLinks.map((social, index) => {\n                  const IconComponent = social.icon;\n                  return (\n                    <a \n                      key={index}\n                      href={social.href} \n                      className=\"bg-primary-green text-white w-10 h-10 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors\"\n                    >\n                      <IconComponent className=\"w-5 h-5\" />\n                    </a>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Form */}\n          <div className=\"bg-gray-50 rounded-default p-8\">\n            <h3 className=\"text-2xl font-bold text-dark-forest mb-6\">Kirim Pesan</h3>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"block text-gray-700 text-sm font-medium mb-2\">Nama Lengkap *</Label>\n                  <Input\n                    type=\"text\"\n                    required\n                    value={formData.name}\n                    onChange={(e) => handleInputChange('name', e.target.value)}\n                    className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green focus:border-transparent\"\n                    placeholder=\"Masukkan nama lengkap\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"block text-gray-700 text-sm font-medium mb-2\">Email *</Label>\n                  <Input\n                    type=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={(e) => handleInputChange('email', e.target.value)}\n                    className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green focus:border-transparent\"\n                    placeholder=\"Masukkan email\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"block text-gray-700 text-sm font-medium mb-2\">No. Telepon *</Label>\n                  <Input\n                    type=\"tel\"\n                    required\n                    value={formData.phone}\n                    onChange={(e) => handleInputChange('phone', e.target.value)}\n                    className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green focus:border-transparent\"\n                    placeholder=\"Masukkan no. telepon\"\n                  />\n                </div>\n                <div>\n                  <Label className=\"block text-gray-700 text-sm font-medium mb-2\">Destinasi Minat</Label>\n                  <Select value={formData.destination} onValueChange={(value) => handleInputChange('destination', value)}>\n                    <SelectTrigger className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green focus:border-transparent\">\n                      <SelectValue placeholder=\"Pilih Destinasi\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"bali\">Bali</SelectItem>\n                      <SelectItem value=\"yogyakarta\">Yogyakarta</SelectItem>\n                      <SelectItem value=\"lombok\">Lombok</SelectItem>\n                      <SelectItem value=\"raja-ampat\">Raja Ampat</SelectItem>\n                      <SelectItem value=\"lainnya\">Lainnya</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <Label className=\"block text-gray-700 text-sm font-medium mb-2\">Pesan</Label>\n                <Textarea\n                  rows={4}\n                  value={formData.message}\n                  onChange={(e) => handleInputChange('message', e.target.value)}\n                  className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green focus:border-transparent\"\n                  placeholder=\"Ceritakan rencana liburan Anda...\"\n                />\n              </div>\n\n              <Button\n                type=\"submit\"\n                disabled={submitInquiry.isPending}\n                className=\"w-full bg-primary-green text-white py-3 rounded-default hover:bg-green-600 transition-colors font-semibold\"\n              >\n                {submitInquiry.isPending ? \"Mengirim...\" : \"Kirim Pesan\"}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":8966},"client/src/components/featured-packages.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Star, Clock, Users, MapPin, Camera, Utensils, Car, X } from \"lucide-react\";\n\nconst packages = [\n  {\n    id: 1,\n    name: \"Bali Budaya & Alam\",\n    description: \"Jelajahi keindahan sawah terasering Jatiluwih, Pura Tanah Lot, dan budaya Bali yang autentik\",\n    duration: \"3D2N\",\n    price: 2850000,\n    rating: 4.8,\n    imageUrl: \"https://images.unsplash.com/photo-1537953773345-d172ccf13cf1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=400\",\n    location: \"Bali\",\n    color: \"bg-primary-green\",\n    longDescription: \"Rasakan pengalaman tak terlupakan di Pulau Dewata dengan paket wisata yang menggabungkan keindahan alam dan kekayaan budaya Bali. Kunjungi sawah terasering Jatiluwih yang menakjubkan, saksi Pura Tanah Lot saat matahari terbenam, dan nikmati pertunjukan tari tradisional di Ubud.\",\n    highlights: [\"Sawah Terasering Jatiluwih\", \"Pura Tanah Lot\", \"Ubud Monkey Forest\", \"Pasar Seni Sukawati\", \"Pertunjukan Tari Kecak\"],\n    includes: [\"Hotel bintang 4\", \"Transportasi AC\", \"Makan 6x\", \"Guide profesional\", \"Tiket masuk wisata\"],\n    maxCapacity: 20,\n    gallery: [\n      \"https://images.unsplash.com/photo-1537953773345-d172ccf13cf1?w=400\",\n      \"https://images.unsplash.com/photo-1518548419970-58e3b4079ab2?w=400\",\n      \"https://images.unsplash.com/photo-1555400113-f9031b67b441?w=400\"\n    ]\n  },\n  {\n    id: 2,\n    name: \"Yogya Heritage Tour\",\n    description: \"Eksplorasi Candi Borobudur, Prambanan, Keraton Yogya, dan kuliner legendaris Gudeg\",\n    duration: \"4D3N\",\n    price: 1950000,\n    rating: 4.9,\n    imageUrl: \"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=400\",\n    location: \"Yogyakarta\",\n    color: \"bg-warm-brown\",\n    longDescription: \"Nikmati perjalanan sejarah dan budaya di kota istimewa Yogyakarta. Jelajahi kemegahan Candi Borobudur dan Prambanan, rasakan kehidupan kerajaan di Kraton Sultan, dan manjakan lidah dengan kuliner khas seperti Gudeg Yu Djum yang legendaris.\",\n    highlights: [\"Candi Borobudur Sunrise\", \"Candi Prambanan\", \"Keraton Yogyakarta\", \"Jalan Malioboro\", \"Taman Sari\", \"Kuliner Gudeg\"],\n    includes: [\"Hotel heritage\", \"Transportasi pribadi\", \"Makan 9x\", \"Guide sejarah\", \"Tiket candi\", \"Workshop batik\"],\n    maxCapacity: 15,\n    gallery: [\n      \"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?w=400\",\n      \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400\",\n      \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\"\n    ]\n  },\n  {\n    id: 3,\n    name: \"Lombok Paradise\",\n    description: \"Nikmati keindahan Pantai Senggigi, Gili Trawangan, dan pendakian Gunung Rinjani\",\n    duration: \"5D4N\",\n    price: 3450000,\n    rating: 4.6,\n    imageUrl: \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=400\",\n    location: \"Lombok\",\n    color: \"bg-blue-500\",\n    longDescription: \"Temukan surga tersembunyi di Lombok dengan kombinasi sempurna antara petualangan dan relaksasi. Jelajahi pantai-pantai eksotis, nikmati snorkeling di Gili Trawangan, dan tantang diri dengan pendakian Gunung Rinjani yang menakjubkan.\",\n    highlights: [\"Pantai Senggigi\", \"Gili Trawangan\", \"Trekking Rinjani\", \"Air Terjun Sekumpul\", \"Desa Sade\", \"Pantai Kuta Lombok\"],\n    includes: [\"Resort tepi pantai\", \"Speedboat Gili\", \"Peralatan snorkeling\", \"Guide trekking\", \"Makan 12x\", \"Perlengkapan camping\"],\n    maxCapacity: 12,\n    gallery: [\n      \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\",\n      \"https://images.unsplash.com/photo-1571896349842-33c89424de2d?w=400\",\n      \"https://images.unsplash.com/photo-1566142475016-16e88ac35de7?w=400\"\n    ]\n  },\n  {\n    id: 4,\n    name: \"Raja Ampat Diving\",\n    description: \"Eksplorasi surga bawah laut terbaik dunia dengan keanekaragaman hayati luar biasa\",\n    duration: \"6D5N\",\n    price: 8750000,\n    rating: 5.0,\n    imageUrl: \"https://images.unsplash.com/photo-1583212292454-1fe6229603b7?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=400\",\n    location: \"Raja Ampat\",\n    color: \"bg-teal-500\",\n    longDescription: \"Rasakan pengalaman diving terbaik di dunia di Raja Ampat, Papua Barat. Dengan 75% spesies ikan dunia dan terumbu karang yang masih pristine, Raja Ampat adalah surga bagi para pecinta bawah laut dan underwater photography.\",\n    highlights: [\"Diving Pianemo\", \"Cape Kri\", \"Arborek Village\", \"Piaynemo Mushroom Rock\", \"Underwater Photography\", \"Manta Ray Cleaning Station\"],\n    includes: [\"Liveaboard premium\", \"Full diving equipment\", \"Certified divemaster\", \"Underwater camera\", \"Full board meals\", \"Airport transfer Sorong\"],\n    maxCapacity: 8,\n    gallery: [\n      \"https://images.unsplash.com/photo-1583212292454-1fe6229603b7?w=400\",\n      \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\",\n      \"https://images.unsplash.com/photo-1582967788606-a171c1080cb0?w=400\"\n    ]\n  },\n  {\n    id: 5,\n    name: \"Java Cultural Journey\",\n    description: \"Perjalanan budaya lengkap Jakarta-Bandung-Yogya-Solo dengan pengalaman autentik\",\n    duration: \"7D6N\",\n    price: 4250000,\n    rating: 4.7,\n    imageUrl: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=400\",\n    location: \"Java\",\n    color: \"bg-purple-500\",\n    longDescription: \"Jelajahi kekayaan budaya Pulau Jawa dari Jakarta hingga Solo. Rasakan perkembangan sejarah Indonesia melalui museum, istana kerajaan, kampung batik, dan kuliner tradisional yang otentik di setiap kota.\",\n    highlights: [\"Monas Jakarta\", \"Factory Outlet Bandung\", \"Candi Borobudur\", \"Keraton Solo\", \"Museum Batik\", \"Kuliner Street Food\"],\n    includes: [\"Hotel bintang 4\", \"Kereta eksekutif\", \"Bus pariwisata\", \"Guide lokal\", \"Makan 18x\", \"Workshop batik\"],\n    maxCapacity: 25,\n    gallery: [\n      \"https://images.unsplash.com/photo-1551632811-561732d1e306?w=400\",\n      \"https://images.unsplash.com/photo-1542273917363-3b1817f69a2d?w=400\",\n      \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400\"\n    ]\n  },\n  {\n    id: 6,\n    name: \"Adventure Trekking\",\n    description: \"Petualangan mendaki Gunung Bromo, air terjun Tumpak Sewu, dan kawah Ijen yang memukau\",\n    duration: \"4D3N\",\n    price: 2150000,\n    rating: 4.8,\n    imageUrl: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=400\",\n    location: \"East Java\",\n    color: \"bg-orange-500\",\n    longDescription: \"Tantang adrenalin dengan petualangan trekking di Jawa Timur. Saksikan sunrise dari puncak Bromo, jelajahi keindahan air terjun Tumpak Sewu, dan nikmati blue fire phenomenon di kawah Ijen yang spektakuler.\",\n    highlights: [\"Sunrise Mount Bromo\", \"Tumpak Sewu Waterfall\", \"Ijen Blue Fire\", \"Whispering Sand\", \"Cemoro Lawang\", \"Traditional Village\"],\n    includes: [\"Mountain lodge\", \"Jeep 4WD\", \"Trekking equipment\", \"Professional guide\", \"Makan 9x\", \"Gas mask Ijen\"],\n    maxCapacity: 16,\n    gallery: [\n      \"https://images.unsplash.com/photo-1551632811-561732d1e306?w=400\",\n      \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400\",\n      \"https://images.unsplash.com/photo-1571896349842-33c89424de2d?w=400\"\n    ]\n  }\n];\n\nexport default function FeaturedPackages() {\n  const [selectedPackage, setSelectedPackage] = useState<any>(null);\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('id-ID', {\n      style: 'currency',\n      currency: 'IDR',\n      minimumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const renderStars = (rating: number) => {\n    return (\n      <div className=\"flex items-center\">\n        {[...Array(5)].map((_, i) => (\n          <Star\n            key={i}\n            className={`w-4 h-4 ${\n              i < rating ? \"text-yellow-400 fill-current\" : \"text-gray-300\"\n            }`}\n          />\n        ))}\n        <span className=\"ml-1 text-sm font-medium text-gray-700\">{rating}</span>\n      </div>\n    );\n  };\n\n  const handlePackageClick = (pkg: any) => {\n    setSelectedPackage(pkg);\n  };\n\n  const closeModal = () => {\n    setSelectedPackage(null);\n  };\n\n  return (\n    <section id=\"packages\" className=\"py-16 bg-white\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-4xl font-bold text-dark-forest mb-4\">Paket Wisata Terpopuler</h2>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n            Pilihan paket tour terbaik dengan harga terjangkau dan pelayanan memuaskan\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8\">\n          {packages.map((pkg) => (\n            <Card \n              key={pkg.id} \n              className=\"bg-white rounded-default shadow-lg hover:shadow-xl transition-all cursor-pointer transform hover:scale-105 duration-200 overflow-hidden\"\n              onClick={() => handlePackageClick(pkg)}\n            >\n              <div className=\"relative\">\n                <img \n                  src={pkg.imageUrl} \n                  alt={`${pkg.name} tour package`} \n                  className=\"w-full h-48 object-cover\"\n                />\n                <div className=\"absolute top-4 left-4\">\n                  <Badge className={`${pkg.color} text-white px-3 py-1 rounded-full text-sm font-medium`}>\n                    {pkg.duration}\n                  </Badge>\n                </div>\n                <div className=\"absolute top-4 right-4 bg-white/90 backdrop-blur-sm rounded-full px-2 py-1\">\n                  {renderStars(pkg.rating)}\n                </div>\n              </div>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center mb-2\">\n                  <MapPin className=\"w-4 h-4 text-gray-500 mr-1\" />\n                  <span className=\"text-sm text-gray-600\">{pkg.location}</span>\n                </div>\n                <h3 className=\"text-xl font-bold text-dark-forest mb-2 hover:text-primary-green transition-colors\">\n                  {pkg.name}\n                </h3>\n                <p className=\"text-gray-600 mb-4 line-clamp-2\">{pkg.description}</p>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <span className=\"text-2xl font-bold text-primary-green\">\n                      Rp {pkg.price.toLocaleString('id-ID')}\n                    </span>\n                    <span className=\"text-gray-500 text-sm\">/orang</span>\n                  </div>\n                  <Button \n                    className=\"bg-primary-green text-white px-4 py-2 rounded-default hover:bg-green-600 transition-colors\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handlePackageClick(pkg);\n                    }}\n                  >\n                    Lihat Detail\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <Button className=\"bg-primary-green text-white px-8 py-3 rounded-default hover:bg-green-600 transition-colors font-semibold\">\n            Lihat Semua Paket\n          </Button>\n        </div>\n      </div>\n\n      {/* Package Detail Modal */}\n      <Dialog open={!!selectedPackage} onOpenChange={closeModal}>\n        <DialogContent className=\"max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n          {selectedPackage && (\n            <>\n              <DialogHeader className=\"relative\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute right-0 top-0 p-2\"\n                  onClick={closeModal}\n                >\n                  <X className=\"w-4 h-4\" />\n                </Button>\n                <DialogTitle className=\"text-2xl font-bold text-dark-forest pr-10\">\n                  {selectedPackage.name}\n                </DialogTitle>\n                <div className=\"flex items-center gap-4 mt-2\">\n                  <div className=\"flex items-center\">\n                    <MapPin className=\"w-4 h-4 text-gray-500 mr-1\" />\n                    <span className=\"text-gray-600\">{selectedPackage.location}</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <Clock className=\"w-4 h-4 text-gray-500 mr-1\" />\n                    <span className=\"text-gray-600\">{selectedPackage.duration}</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <Users className=\"w-4 h-4 text-gray-500 mr-1\" />\n                    <span className=\"text-gray-600\">Max {selectedPackage.maxCapacity} orang</span>\n                  </div>\n                  {renderStars(selectedPackage.rating)}\n                </div>\n              </DialogHeader>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n                {/* Image Gallery */}\n                <div className=\"space-y-4\">\n                  <div className=\"aspect-video rounded-lg overflow-hidden\">\n                    <img \n                      src={selectedPackage.imageUrl} \n                      alt={selectedPackage.name}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </div>\n                  {selectedPackage.gallery && (\n                    <div className=\"grid grid-cols-3 gap-2\">\n                      {selectedPackage.gallery.map((img: string, index: number) => (\n                        <div key={index} className=\"aspect-square rounded-lg overflow-hidden\">\n                          <img \n                            src={img} \n                            alt={`${selectedPackage.name} ${index + 1}`}\n                            className=\"w-full h-full object-cover hover:scale-110 transition-transform cursor-pointer\"\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n\n                {/* Package Details */}\n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"text-xl font-bold text-dark-forest mb-3\">Deskripsi Paket</h3>\n                    <p className=\"text-gray-600 leading-relaxed\">{selectedPackage.longDescription}</p>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-xl font-bold text-dark-forest mb-3\">Highlight Destinasi</h3>\n                    <div className=\"grid grid-cols-1 gap-2\">\n                      {selectedPackage.highlights?.map((highlight: string, index: number) => (\n                        <div key={index} className=\"flex items-center\">\n                          <Camera className=\"w-4 h-4 text-primary-green mr-2 flex-shrink-0\" />\n                          <span className=\"text-gray-600\">{highlight}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-xl font-bold text-dark-forest mb-3\">Yang Sudah Termasuk</h3>\n                    <div className=\"grid grid-cols-1 gap-2\">\n                      {selectedPackage.includes?.map((include: string, index: number) => (\n                        <div key={index} className=\"flex items-center\">\n                          <div className=\"w-2 h-2 bg-primary-green rounded-full mr-3\"></div>\n                          <span className=\"text-gray-600\">{include}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div>\n                        <div className=\"text-3xl font-bold text-primary-green\">\n                          {formatPrice(selectedPackage.price)}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">per orang</div>\n                      </div>\n                      <Badge className={`${selectedPackage.color} text-white px-3 py-1`}>\n                        {selectedPackage.duration}\n                      </Badge>\n                    </div>\n                    \n                    <div className=\"flex gap-3\">\n                      <Button className=\"flex-1 bg-primary-green hover:bg-green-600 text-white\">\n                        <Car className=\"w-4 h-4 mr-2\" />\n                        Pesan Sekarang\n                      </Button>\n                      <Button variant=\"outline\" className=\"border-primary-green text-primary-green hover:bg-primary-green hover:text-white\">\n                        <Utensils className=\"w-4 h-4 mr-2\" />\n                        Tanya Detail\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </DialogContent>\n      </Dialog>\n    </section>\n  );\n}\n","size_bytes":17545},"client/src/components/footer.tsx":{"content":"import { Facebook, Instagram, Twitter, Youtube, MapPin, Phone, Mail } from \"lucide-react\";\nimport logoImage from \"@assets/ChatGPT Image Aug 9, 2025, 11_33_24 AM_1754716649787.png\";\n\nexport default function Footer() {\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const quickLinks = [\n    { name: \"Beranda\", id: \"home\" },\n    { name: \"Paket Wisata\", id: \"packages\" },\n    { name: \"Destinasi\", id: \"destinations\" },\n    { name: \"Tentang Kami\", id: \"about\" },\n    { name: \"Kontak\", id: \"contact\" }\n  ];\n\n  const destinations = [\n    \"Bali\",\n    \"Yogyakarta\", \n    \"Lombok\",\n    \"Raja Ampat\",\n    \"Bromo Tengger\"\n  ];\n\n  const socialLinks = [\n    { icon: Facebook, href: \"#\" },\n    { icon: Instagram, href: \"#\" },\n    { icon: Twitter, href: \"#\" },\n    { icon: Youtube, href: \"#\" }\n  ];\n\n  return (\n    <footer className=\"bg-dark-forest text-white py-12\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div>\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <img \n                src={logoImage} \n                alt=\"RR Travel Logo\" \n                className=\"w-12 h-12 object-contain\"\n              />\n              <span className=\"text-2xl font-bold\">RR Travel</span>\n            </div>\n            <p className=\"text-gray-300 mb-4\">\n              Menyediakan pengalaman wisata terbaik di Indonesia dengan layanan professional dan terpercaya.\n            </p>\n            <div className=\"flex space-x-3\">\n              {socialLinks.map((social, index) => {\n                const IconComponent = social.icon;\n                return (\n                  <a \n                    key={index}\n                    href={social.href} \n                    className=\"text-gray-300 hover:text-primary-green transition-colors\"\n                  >\n                    <IconComponent className=\"w-5 h-5\" />\n                  </a>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"text-lg font-bold mb-6\">Quick Links</h4>\n            <ul className=\"space-y-3\">\n              {quickLinks.map((link, index) => (\n                <li key={index}>\n                  <button \n                    onClick={() => scrollToSection(link.id)}\n                    className=\"text-gray-300 hover:text-primary-green transition-colors\"\n                  >\n                    {link.name}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Destinations */}\n          <div>\n            <h4 className=\"text-lg font-bold mb-6\">Destinasi Populer</h4>\n            <ul className=\"space-y-3\">\n              {destinations.map((destination, index) => (\n                <li key={index}>\n                  <a href=\"#\" className=\"text-gray-300 hover:text-primary-green transition-colors\">\n                    {destination}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h4 className=\"text-lg font-bold mb-6\">Kontak</h4>\n            <div className=\"space-y-3\">\n              <p className=\"text-gray-300 flex items-start\">\n                <MapPin className=\"w-4 h-4 mt-1 mr-3 text-primary-green flex-shrink-0\" />\n                Jl. Siti Mariah<br />Jakarta, Indonesia\n              </p>\n              <p className=\"text-gray-300 flex items-center\">\n                <Phone className=\"w-4 h-4 mr-3 text-primary-green\" />\n                082115665661\n              </p>\n              <p className=\"text-gray-300 flex items-center\">\n                <Mail className=\"w-4 h-4 mr-3 text-primary-green\" />\n                info@rrtravel.com\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-700 mt-12 pt-8 text-center\">\n          <p className=\"text-gray-300\">\n            © 2024 RR Travel. All rights reserved. | Designed with ❤️ for Indonesia Tourism\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4279},"client/src/components/header.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Search, Menu, QrCode } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport QRScanner from \"@/components/qr-scanner\";\nimport logoImage from \"@assets/ChatGPT Image Aug 9, 2025, 11_33_24 AM_1754716649787.png\";\n\nexport default function Header() {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isQRScannerOpen, setIsQRScannerOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 100);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n    // Close mobile menu after navigation\n    setIsMobileMenuOpen(false);\n  };\n\n  return (\n    <header className={`bg-white sticky top-0 z-50 transition-shadow duration-300 ${isScrolled ? 'shadow-lg' : 'shadow-md'}`}>\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <div className=\"flex items-center space-x-3\">\n            <img \n              src={logoImage} \n              alt=\"RR Travel Logo\" \n              className=\"w-12 h-12 object-contain\"\n            />\n            <span className=\"text-2xl font-bold text-dark-forest\">RR Travel</span>\n          </div>\n\n          {/* Search Bar */}\n          <div className=\"hidden md:flex flex-1 max-w-xl mx-8\">\n            <div className=\"relative w-full\">\n              <Input \n                type=\"text\" \n                placeholder=\"Cari destinasi, paket wisata...\" \n                className=\"w-full pl-10 border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green focus:border-transparent\"\n              />\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n            </div>\n            <Button className=\"bg-primary-green text-white px-6 ml-2 rounded-default hover:bg-green-600 transition-colors\">\n              Cari\n            </Button>\n          </div>\n\n          {/* QR Scanner Button */}\n          <div className=\"hidden md:flex\">\n            <Button \n              variant=\"outline\"\n              onClick={() => setIsQRScannerOpen(true)}\n              className=\"border-primary-green text-primary-green hover:bg-primary-green hover:text-white transition-colors\"\n            >\n              <QrCode className=\"h-4 w-4 mr-2\" />\n              Scan QR\n            </Button>\n          </div>\n\n          {/* Navigation Menu */}\n          <nav className=\"hidden lg:flex space-x-8\">\n            <button \n              onClick={() => scrollToSection('home')} \n              className=\"text-dark-forest hover:text-primary-green font-medium transition-colors\"\n            >\n              Beranda\n            </button>\n            <button \n              onClick={() => scrollToSection('packages')} \n              className=\"text-dark-forest hover:text-primary-green font-medium transition-colors\"\n            >\n              Paket Wisata\n            </button>\n            <button \n              onClick={() => scrollToSection('destinations')} \n              className=\"text-dark-forest hover:text-primary-green font-medium transition-colors\"\n            >\n              Destinasi\n            </button>\n            <button \n              onClick={() => scrollToSection('about')} \n              className=\"text-dark-forest hover:text-primary-green font-medium transition-colors\"\n            >\n              Tentang Kami\n            </button>\n            <button \n              onClick={() => scrollToSection('contact')} \n              className=\"text-dark-forest hover:text-primary-green font-medium transition-colors\"\n            >\n              Kontak\n            </button>\n          </nav>\n\n          {/* Mobile Menu Button */}\n          <Button \n            variant=\"ghost\" \n            className=\"lg:hidden text-dark-forest\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          >\n            <Menu className=\"h-6 w-6\" />\n          </Button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"lg:hidden bg-white border-t border-gray-200\">\n            <div className=\"px-4 py-2 space-y-2\">\n              {/* Mobile Search */}\n              <div className=\"flex mb-4\">\n                <Input \n                  type=\"text\" \n                  placeholder=\"Cari destinasi...\" \n                  className=\"flex-1 border-gray-300 rounded-l-default focus:ring-2 focus:ring-primary-green focus:border-transparent\"\n                />\n                <Button className=\"bg-primary-green text-white px-4 rounded-r-default hover:bg-green-600 transition-colors\">\n                  Cari\n                </Button>\n              </div>\n              \n              {/* Mobile Navigation */}\n              <nav className=\"space-y-2\">\n                <button \n                  onClick={() => scrollToSection('home')} \n                  className=\"block w-full text-left py-3 px-2 text-dark-forest hover:text-primary-green hover:bg-gray-50 font-medium transition-colors rounded-lg\"\n                >\n                  Beranda\n                </button>\n                <button \n                  onClick={() => scrollToSection('packages')} \n                  className=\"block w-full text-left py-3 px-2 text-dark-forest hover:text-primary-green hover:bg-gray-50 font-medium transition-colors rounded-lg\"\n                >\n                  Paket Wisata\n                </button>\n                <button \n                  onClick={() => scrollToSection('destinations')} \n                  className=\"block w-full text-left py-3 px-2 text-dark-forest hover:text-primary-green hover:bg-gray-50 font-medium transition-colors rounded-lg\"\n                >\n                  Destinasi\n                </button>\n                <button \n                  onClick={() => scrollToSection('about')} \n                  className=\"block w-full text-left py-3 px-2 text-dark-forest hover:text-primary-green hover:bg-gray-50 font-medium transition-colors rounded-lg\"\n                >\n                  Tentang Kami\n                </button>\n                <button \n                  onClick={() => scrollToSection('contact')} \n                  className=\"block w-full text-left py-3 px-2 text-dark-forest hover:text-primary-green hover:bg-gray-50 font-medium transition-colors rounded-lg\"\n                >\n                  Kontak\n                </button>\n                <button \n                  onClick={() => {\n                    setIsQRScannerOpen(true);\n                    setIsMobileMenuOpen(false);\n                  }} \n                  className=\"block w-full text-left py-3 px-2 text-primary-green hover:bg-green-50 font-medium transition-colors rounded-lg border-t border-gray-200\"\n                >\n                  <QrCode className=\"inline h-4 w-4 mr-2\" />\n                  Scan QR Paket Wisata\n                </button>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* QR Scanner Dialog */}\n      <QRScanner \n        isOpen={isQRScannerOpen}\n        onClose={() => setIsQRScannerOpen(false)}\n      />\n    </header>\n  );\n}\n","size_bytes":7504},"client/src/components/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\n\nexport default function HeroSection() {\n  return (\n    <section id=\"home\" className=\"relative h-screen flex items-center justify-center\">\n      {/* Background Image with Overlay */}\n      <div \n        className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\" \n        style={{\n          backgroundImage: `linear-gradient(rgba(12, 28, 16, 0.4), rgba(12, 28, 16, 0.4)), url('https://images.unsplash.com/photo-1559827260-dc66d52bef19?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1920&h=1080')`\n        }}\n      />\n      \n      <div className=\"relative z-10 text-center text-white max-w-4xl mx-auto px-4\">\n        <h1 className=\"text-5xl md:text-6xl font-bold mb-6 leading-tight\">\n          Jelajahi Keindahan <br />\n          <span className=\"text-light-green\">Indonesia Bersama Kami</span>\n        </h1>\n        <p className=\"text-xl md:text-2xl mb-8 text-gray-200\">\n          Temukan pengalaman tak terlupakan di destinasi wisata terbaik Indonesia dengan paket tour terpercaya\n        </p>\n        \n        {/* Search Widget */}\n        <div className=\"bg-white rounded-default p-4 md:p-6 shadow-xl max-w-2xl mx-auto\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3 md:gap-4\">\n            <div>\n              <Label className=\"block text-gray-700 text-sm font-medium mb-2\">Destinasi</Label>\n              <Select>\n                <SelectTrigger className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green\">\n                  <SelectValue placeholder=\"Pilih Destinasi\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"bali\">Bali</SelectItem>\n                  <SelectItem value=\"yogyakarta\">Yogyakarta</SelectItem>\n                  <SelectItem value=\"lombok\">Lombok</SelectItem>\n                  <SelectItem value=\"raja-ampat\">Raja Ampat</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div>\n              <Label className=\"block text-gray-700 text-sm font-medium mb-2\">Tanggal</Label>\n              <Input \n                type=\"date\" \n                className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green\"\n              />\n            </div>\n            <div className=\"sm:col-span-2 md:col-span-1\">\n              <Label className=\"block text-gray-700 text-sm font-medium mb-2\">Peserta</Label>\n              <Select>\n                <SelectTrigger className=\"w-full border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green\">\n                  <SelectValue placeholder=\"Jumlah Peserta\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"1-2\">1-2 Orang</SelectItem>\n                  <SelectItem value=\"3-5\">3-5 Orang</SelectItem>\n                  <SelectItem value=\"6+\">6+ Orang</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n          <Button className=\"w-full bg-primary-green text-white py-2 md:py-3 rounded-default mt-3 md:mt-4 hover:bg-green-600 transition-colors font-semibold text-sm md:text-base\">\n            Cari Paket Wisata\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3532},"client/src/components/map-section.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Search, MapPin } from 'lucide-react';\n\ninterface MapSectionProps {\n  showOfficeLocation?: boolean;\n}\n\nexport default function MapSection({ showOfficeLocation = true }: MapSectionProps) {\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const map = useRef<mapboxgl.Map | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Office location coordinates (Bandung area - Jl. Siti Mariah)\n  const officeLocation: [number, number] = [107.619, -6.914]; // Bandung coordinates\n\n  useEffect(() => {\n    if (map.current) return; // Initialize map only once\n\n    const initializeMap = async () => {\n      try {\n        // Fetch configuration from API\n        const response = await fetch('/api/config');\n        const config = await response.json();\n        const mapboxToken = config.mapboxToken;\n\n        if (!mapboxToken) {\n          console.error('Mapbox token not available');\n          return;\n        }\n\n        mapboxgl.accessToken = mapboxToken;\n\n        map.current = new mapboxgl.Map({\n          container: mapContainer.current!,\n          style: 'mapbox://styles/mapbox/streets-v12',\n          center: officeLocation,\n          zoom: 12,\n          attributionControl: false,\n        });\n\n        // Add navigation controls\n        map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n        // Add office marker if requested\n        if (showOfficeLocation) {\n          new mapboxgl.Marker({\n            color: '#5da96a', // Primary green color\n            scale: 1.2\n          })\n            .setLngLat(officeLocation)\n            .setPopup(\n              new mapboxgl.Popup({ offset: 25 }).setHTML(\n                '<div class=\"p-2\"><h3 class=\"font-bold text-green-700\">RR Travel</h3><p class=\"text-sm\">Jl. Siti Mariah<br/>Bandung 40231, Indonesia</p></div>'\n              )\n            )\n            .addTo(map.current);\n        }\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    };\n\n    initializeMap();\n\n    // Clean up on unmount\n    return () => {\n      if (map.current) {\n        map.current.remove();\n      }\n    };\n  }, [showOfficeLocation]);\n\n  const searchLocation = async () => {\n    if (!searchQuery.trim() || !map.current) return;\n\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(\n          searchQuery\n        )}.json?access_token=${mapboxgl.accessToken}&country=ID&limit=5`\n      );\n\n      const data = await response.json();\n\n      if (data.features && data.features.length > 0) {\n        const feature = data.features[0];\n        const [lng, lat] = feature.center;\n\n        // Fly to the searched location\n        map.current.flyTo({\n          center: [lng, lat],\n          zoom: 14,\n          duration: 2000\n        });\n\n        // Remove existing search markers\n        const existingMarkers = document.querySelectorAll('.search-marker');\n        existingMarkers.forEach(marker => marker.remove());\n\n        // Add a marker for the searched location\n        if (map.current) {\n          const marker = new mapboxgl.Marker({\n            color: '#dc2626', // Red color for search results\n            className: 'search-marker'\n          })\n            .setLngLat([lng, lat])\n            .setPopup(\n              new mapboxgl.Popup({ offset: 25 }).setHTML(\n                `<div class=\"p-2\"><h3 class=\"font-bold text-red-600\">Lokasi Pencarian</h3><p class=\"text-sm\">${feature.place_name}</p></div>`\n              )\n            )\n            .addTo(map.current);\n\n          // Open the popup\n          const popup = marker.getPopup();\n          if (popup) {\n            popup.addTo(map.current);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error searching location:', error);\n    }\n    setIsLoading(false);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      searchLocation();\n    }\n  };\n\n  return (\n    <section className=\"py-16 bg-white\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-4xl font-bold text-dark-forest mb-4\">Lokasi & Peta Destinasi</h2>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n            Temukan lokasi kantor kami dan cari destinasi wisata impian Anda di peta interaktif\n          </p>\n        </div>\n\n        {/* Search Box */}\n        <div className=\"max-w-2xl mx-auto mb-8\">\n          <div className=\"flex gap-2\">\n            <div className=\"relative flex-1\">\n              <Input\n                type=\"text\"\n                placeholder=\"Cari destinasi wisata... (contoh: Bali, Yogyakarta, Lombok)\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                onKeyPress={handleKeyPress}\n                className=\"pl-10 border-gray-300 rounded-default focus:ring-2 focus:ring-primary-green focus:border-transparent\"\n              />\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n            </div>\n            <Button\n              onClick={searchLocation}\n              disabled={isLoading || !searchQuery.trim()}\n              className=\"bg-primary-green text-white px-6 rounded-default hover:bg-green-600 transition-colors\"\n            >\n              {isLoading ? 'Mencari...' : 'Cari'}\n            </Button>\n          </div>\n        </div>\n\n        {/* Map Container */}\n        <div className=\"w-full h-96 md:h-[500px] rounded-default overflow-hidden shadow-lg border border-gray-200\">\n          <div ref={mapContainer} className=\"w-full h-full\" />\n        </div>\n\n        {/* Office Location Info */}\n        {showOfficeLocation && (\n          <div className=\"mt-8 bg-gray-50 rounded-default p-6\">\n            <div className=\"flex items-start gap-4\">\n              <div className=\"bg-primary-green text-white w-12 h-12 rounded-full flex items-center justify-center flex-shrink-0\">\n                <MapPin className=\"w-6 h-6\" />\n              </div>\n              <div>\n                <h3 className=\"text-xl font-bold text-dark-forest mb-2\">Kantor RR Travel</h3>\n                <p className=\"text-gray-600 mb-2\">\n                  <strong>Alamat:</strong> Jl. Siti Mariah, Jakarta, Indonesia\n                </p>\n                <p className=\"text-gray-600 mb-2\">\n                  <strong>Telepon:</strong> 082115665661\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  Klik marker hijau di peta untuk melihat lokasi kantor kami\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}","size_bytes":6983},"client/src/components/qr-scanner.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Html5QrcodeScanner, Html5QrcodeScanType } from \"html5-qrcode\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { QrCode, Camera, X, MapPin, Clock, Star } from \"lucide-react\";\n\ninterface TravelPackage {\n  id: string;\n  name: string;\n  location: string;\n  price: string;\n  duration: string;\n  rating: number;\n  description: string;\n  features: string[];\n  imageUrl?: string;\n}\n\n// Sample travel packages data that could be encoded in QR codes\nconst travelPackages: Record<string, TravelPackage> = {\n  \"BALI001\": {\n    id: \"BALI001\",\n    name: \"Paket Wisata Bali Premium\",\n    location: \"Bali, Indonesia\",\n    price: \"Rp 3.500.000\",\n    duration: \"4 Hari 3 Malam\",\n    rating: 4.8,\n    description: \"Nikmati keindahan Bali dengan paket wisata premium yang mencakup kunjungan ke tempat-tempat iconic seperti Tanah Lot, Uluwatu, dan Ubud.\",\n    features: [\"Hotel Bintang 4\", \"Transportasi AC\", \"Guide Profesional\", \"Makan 3x Sehari\", \"Tiket Masuk Wisata\"]\n  },\n  \"YOGYA002\": {\n    id: \"YOGYA002\",\n    name: \"Yogyakarta Heritage Tour\",\n    location: \"Yogyakarta, Indonesia\",\n    price: \"Rp 2.200.000\",\n    duration: \"3 Hari 2 Malam\",\n    rating: 4.7,\n    description: \"Jelajahi kekayaan budaya dan sejarah Yogyakarta dengan mengunjungi Candi Borobudur, Prambanan, Kraton, dan Malioboro.\",\n    features: [\"Hotel Heritage\", \"Transportasi Pribadi\", \"Guide Lokal\", \"Breakfast\", \"Tiket Candi\"]\n  },\n  \"LOMBOK003\": {\n    id: \"LOMBOK003\",\n    name: \"Lombok Adventure Package\",\n    location: \"Lombok, NTB\",\n    price: \"Rp 4.100.000\",\n    duration: \"5 Hari 4 Malam\",\n    rating: 4.9,\n    description: \"Petualangan seru di Lombok dengan trekking Gunung Rinjani, snorkeling di Gili Trawangan, dan menikmati pantai-pantai eksotis.\",\n    features: [\"Resort Tepi Pantai\", \"Peralatan Snorkeling\", \"Guide Pendaki\", \"All Meals\", \"Boat Transfer\"]\n  },\n  \"RAJAAMPAT004\": {\n    id: \"RAJAAMPAT004\",\n    name: \"Raja Ampat Diving Experience\",\n    location: \"Raja Ampat, Papua Barat\",\n    price: \"Rp 8.500.000\",\n    duration: \"6 Hari 5 Malam\",\n    rating: 5.0,\n    description: \"Eksplorasi bawah laut terbaik dunia di Raja Ampat dengan diving di spot-spot terbaik dan menikmati keindahan alam yang masih pristine.\",\n    features: [\"Liveaboard Premium\", \"Diving Equipment\", \"Certified Divemaster\", \"Full Board\", \"Airport Transfer\"]\n  }\n};\n\ninterface QRScannerProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function QRScanner({ isOpen, onClose }: QRScannerProps) {\n  const [isScanning, setIsScanning] = useState(false);\n  const [scannedPackage, setScannedPackage] = useState<TravelPackage | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const scannerRef = useRef<Html5QrcodeScanner | null>(null);\n\n  useEffect(() => {\n    if (isOpen && isScanning && !scannerRef.current) {\n      startScanning();\n    }\n\n    return () => {\n      if (scannerRef.current) {\n        scannerRef.current.clear().catch(console.error);\n        scannerRef.current = null;\n      }\n    };\n  }, [isOpen, isScanning]);\n\n  const startScanning = () => {\n    try {\n      const config = {\n        fps: 10,\n        qrbox: { width: 250, height: 250 },\n        aspectRatio: 1.0,\n        supportedScanTypes: [Html5QrcodeScanType.SCAN_TYPE_CAMERA],\n      };\n\n      scannerRef.current = new Html5QrcodeScanner(\n        \"qr-reader\",\n        config,\n        false\n      );\n\n      scannerRef.current.render(\n        (decodedText: string) => {\n          // Success callback\n          handleScanSuccess(decodedText);\n        },\n        (error: any) => {\n          // Error callback - we can ignore most errors as they're just \"no QR found\"\n          console.debug(\"QR Scan error:\", error);\n        }\n      );\n    } catch (err) {\n      setError(\"Gagal memulai kamera. Pastikan browser Anda mendukung akses kamera.\");\n      console.error(\"Scanner initialization error:\", err);\n    }\n  };\n\n  const handleScanSuccess = (decodedText: string) => {\n    console.log(\"QR Code scanned:\", decodedText);\n    \n    // Stop scanning\n    if (scannerRef.current) {\n      scannerRef.current.clear().catch(console.error);\n      scannerRef.current = null;\n    }\n    setIsScanning(false);\n\n    // Check if the scanned code matches our travel packages\n    const packageData = travelPackages[decodedText.toUpperCase()];\n    \n    if (packageData) {\n      setScannedPackage(packageData);\n      setError(null);\n    } else {\n      setError(`QR Code \"${decodedText}\" tidak dikenali sebagai paket wisata RR Travel. Silakan scan QR code yang valid.`);\n    }\n  };\n\n  const handleStartScanning = () => {\n    setIsScanning(true);\n    setError(null);\n    setScannedPackage(null);\n  };\n\n  const handleClose = () => {\n    if (scannerRef.current) {\n      scannerRef.current.clear().catch(console.error);\n      scannerRef.current = null;\n    }\n    setIsScanning(false);\n    setScannedPackage(null);\n    setError(null);\n    onClose();\n  };\n\n  const renderStars = (rating: number) => {\n    return (\n      <div className=\"flex items-center gap-1\">\n        {[...Array(5)].map((_, i) => (\n          <Star\n            key={i}\n            className={`w-4 h-4 ${\n              i < rating ? \"text-yellow-400 fill-current\" : \"text-gray-300\"\n            }`}\n          />\n        ))}\n        <span className=\"ml-1 text-sm font-medium\">{rating}</span>\n      </div>\n    );\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-md w-full max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <QrCode className=\"w-5 h-5 text-green-600\" />\n            Scan QR Code Paket Wisata\n          </DialogTitle>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"absolute right-4 top-4 p-2\"\n            onClick={handleClose}\n          >\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          {!isScanning && !scannedPackage && !error && (\n            <div className=\"text-center py-8\">\n              <QrCode className=\"w-16 h-16 text-green-600 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-bold text-gray-800 mb-2\">Scan QR Code RR Travel</h3>\n              <p className=\"text-gray-600 mb-6 max-w-sm mx-auto\">\n                Scan QR code khusus dari brosur atau materi promosi RR Travel untuk melihat detail paket wisata\n              </p>\n              <Button onClick={handleStartScanning} className=\"bg-green-600 hover:bg-green-700\">\n                <Camera className=\"w-4 h-4 mr-2\" />\n                Mulai Scan QR Code\n              </Button>\n            </div>\n          )}\n\n          {isScanning && (\n            <div className=\"space-y-4\">\n              <div id=\"qr-reader\" className=\"w-full\"></div>\n              <div className=\"text-center\">\n                <p className=\"text-sm text-gray-600 mb-2\">\n                  Arahkan kamera ke QR code paket wisata\n                </p>\n                <Button \n                  variant=\"outline\" \n                  onClick={() => {\n                    if (scannerRef.current) {\n                      scannerRef.current.clear().catch(console.error);\n                      scannerRef.current = null;\n                    }\n                    setIsScanning(false);\n                  }}\n                >\n                  Batal\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {error && (\n            <div className=\"text-center py-6\">\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-4\">\n                <p className=\"text-red-600 text-sm\">{error}</p>\n                <p className=\"text-red-500 text-xs mt-2\">\n                  Pastikan QR code berasal dari brosur atau materi promosi resmi RR Travel\n                </p>\n              </div>\n              <Button onClick={handleStartScanning} variant=\"outline\">\n                Scan Ulang\n              </Button>\n            </div>\n          )}\n\n          {scannedPackage && (\n            <Card className=\"border-green-200\">\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-lg text-green-700 mb-1\">\n                      {scannedPackage.name}\n                    </CardTitle>\n                    <div className=\"flex items-center text-gray-600 text-sm mb-2\">\n                      <MapPin className=\"w-4 h-4 mr-1\" />\n                      {scannedPackage.location}\n                    </div>\n                    {renderStars(scannedPackage.rating)}\n                  </div>\n                  <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                    {scannedPackage.id}\n                  </Badge>\n                </div>\n              </CardHeader>\n              \n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center text-gray-600\">\n                    <Clock className=\"w-4 h-4 mr-2\" />\n                    <span className=\"text-sm\">{scannedPackage.duration}</span>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {scannedPackage.price}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">per orang</div>\n                  </div>\n                </div>\n\n                <div>\n                  <p className=\"text-gray-700 text-sm leading-relaxed\">\n                    {scannedPackage.description}\n                  </p>\n                </div>\n\n                <div>\n                  <h4 className=\"font-semibold text-gray-800 mb-2\">Yang Termasuk:</h4>\n                  <div className=\"grid grid-cols-1 gap-1\">\n                    {scannedPackage.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center text-sm text-gray-600\">\n                        <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                        {feature}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2 pt-2\">\n                  <Button className=\"flex-1 bg-green-600 hover:bg-green-700\">\n                    Pesan Sekarang\n                  </Button>\n                  <Button variant=\"outline\" onClick={handleStartScanning}>\n                    Scan Lagi\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":11045},"client/src/components/services-section.tsx":{"content":"import { Shield, Users, DollarSign, Headphones } from \"lucide-react\";\n\nconst services = [\n  {\n    icon: Shield,\n    title: \"Terpercaya & Aman\",\n    description: \"Terdaftar resmi dengan standar keamanan tinggi untuk kenyamanan perjalanan Anda\"\n  },\n  {\n    icon: Users,\n    title: \"Guide Berpengalaman\",\n    description: \"Tim guide lokal profesional dengan pengetahuan mendalam tentang destinasi wisata\"\n  },\n  {\n    icon: DollarSign,\n    title: \"Harga Terjangkau\",\n    description: \"Paket wisata berkualitas dengan harga bersaing dan tanpa biaya tersembunyi\"\n  },\n  {\n    icon: Headphones,\n    title: \"Support 24/7\",\n    description: \"Layanan pelanggan siap membantu Anda kapan saja selama perjalanan wisata\"\n  }\n];\n\nexport default function ServicesSection() {\n  return (\n    <section className=\"py-16 bg-gray-50\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-4xl font-bold text-dark-forest mb-4\">Mengapa Memilih RR Travel?</h2>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n            Kami berkomitmen memberikan pengalaman wisata terbaik dengan layanan profesional dan terpercaya\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 md:gap-8\">\n          {services.map((service, index) => {\n            const IconComponent = service.icon;\n            return (\n              <div key={index} className=\"text-center\">\n                <div className=\"bg-primary-green text-white w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <IconComponent className=\"w-8 h-8\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-dark-forest mb-2\">{service.title}</h3>\n                <p className=\"text-gray-600\">{service.description}</p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1943},"client/src/components/testimonials-section.tsx":{"content":"import { Star } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nconst testimonials = [\n  {\n    id: 1,\n    name: \"Andi Setiawan\",\n    location: \"Jakarta\",\n    rating: 5,\n    text: \"Perjalanan ke Bali bersama RR Travel sangat memuaskan! Guide-nya ramah dan berpengetahuan luas. Semua destinasi sesuai dengan yang dijanjikan, bahkan melebihi ekspektasi kami.\",\n    initials: \"AS\"\n  },\n  {\n    id: 2,\n    name: \"Maya Pertiwi\",\n    location: \"Surabaya\",\n    rating: 5,\n    text: \"Diving di Raja Ampat adalah pengalaman yang luar biasa! Tim RR Travel sangat profesional dalam mengatur semuanya. Safety equipment lengkap dan guide diving sangat berpengalaman.\",\n    initials: \"MP\"\n  },\n  {\n    id: 3,\n    name: \"Rizki Hermawan\",\n    location: \"Bandung\",\n    rating: 4,\n    text: \"Tour Yogyakarta sangat edukatif! Kami belajar banyak tentang sejarah dan budaya Jawa. Harga paket juga sangat terjangkau untuk kualitas layanan yang diberikan.\",\n    initials: \"RH\"\n  }\n];\n\nexport default function TestimonialsSection() {\n  return (\n    <section className=\"py-16 bg-gray-50\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-4xl font-bold text-dark-forest mb-4\">Testimoni Pelanggan</h2>\n          <p className=\"text-xl text-gray-600\">Dengarkan cerita pengalaman wisata terbaik dari para pelanggan kami</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8\">\n          {testimonials.map((testimonial) => (\n            <Card key={testimonial.id} className=\"bg-white rounded-default shadow-lg\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex text-yellow-500 mb-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star \n                      key={i} \n                      className={`w-4 h-4 ${i < testimonial.rating ? 'fill-current' : 'stroke-current'}`} \n                    />\n                  ))}\n                </div>\n                <p className=\"text-gray-600 mb-6 italic\">\"{testimonial.text}\"</p>\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-primary-green rounded-full flex items-center justify-center text-white font-bold mr-4\">\n                    {testimonial.initials}\n                  </div>\n                  <div>\n                    <h5 className=\"font-bold text-dark-forest\">{testimonial.name}</h5>\n                    <p className=\"text-gray-500 text-sm\">{testimonial.location}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2715},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/booking.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Calendar, MapPin, Users, Clock, CreditCard, Star } from \"lucide-react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { TravelPackage, PaymentMethod } from \"@shared/schema\";\n\nconst bookingSchema = z.object({\n  packageId: z.string().min(1, \"Package ID is required\"),\n  customerName: z.string().min(2, \"Nama lengkap minimal 2 karakter\"),\n  customerEmail: z.string().email(\"Email tidak valid\"),\n  customerPhone: z.string().min(10, \"Nomor telepon minimal 10 digit\"),\n  participants: z.number().min(1, \"Minimal 1 peserta\").max(20, \"Maksimal 20 peserta\"),\n  startDate: z.string().min(1, \"Tanggal keberangkatan harus dipilih\"),\n  specialRequests: z.string().optional(),\n});\n\ntype BookingFormData = z.infer<typeof bookingSchema>;\n\nconst paymentMethods: { value: PaymentMethod; label: string; description: string }[] = [\n  { value: \"qris\", label: \"QRIS\", description: \"Scan QR code untuk pembayaran instant\" },\n  { value: \"gopay\", label: \"GoPay\", description: \"Bayar dengan GoPay\" },\n  { value: \"ovo\", label: \"OVO\", description: \"Bayar dengan OVO\" },\n  { value: \"shopeepay\", label: \"ShopeePay\", description: \"Bayar dengan ShopeePay\" },\n  { value: \"dana\", label: \"DANA\", description: \"Bayar dengan DANA\" },\n  { value: \"bank_transfer\", label: \"Bank Transfer\", description: \"Transfer bank virtual account\" },\n  { value: \"credit_card\", label: \"Kartu Kredit\", description: \"Bayar dengan kartu kredit/debit\" },\n];\n\nexport default function BookingPage() {\n  const [match, params] = useRoute(\"/booking/:packageId\");\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<PaymentMethod>(\"qris\");\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n  const packageId = params?.packageId;\n\n  // Fetch travel package details\n  const { data: travelPackage, isLoading: isLoadingPackage } = useQuery<TravelPackage>({\n    queryKey: [\"/api/packages\", packageId],\n    enabled: !!packageId\n  });\n\n  const form = useForm<BookingFormData>({\n    resolver: zodResolver(bookingSchema),\n    defaultValues: {\n      packageId: packageId || \"\",\n      customerName: \"\",\n      customerEmail: \"\",\n      customerPhone: \"\",\n      participants: 1,\n      startDate: \"\",\n      specialRequests: \"\",\n    }\n  });\n\n  // Update package ID when it changes\n  useEffect(() => {\n    if (packageId) {\n      form.setValue(\"packageId\", packageId);\n    }\n  }, [packageId, form]);\n\n  // Calculate total amount\n  const participants = form.watch(\"participants\");\n  const totalAmount = travelPackage ? travelPackage.price * participants : 0;\n\n  // Create booking mutation\n  const createBookingMutation = useMutation({\n    mutationFn: async (data: BookingFormData & { totalAmount: number }) => {\n      return await apiRequest(\"/api/bookings\", \"POST\", data);\n    },\n    onSuccess: (booking) => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/bookings\"] });\n      // Proceed to payment\n      handlePayment(booking);\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Gagal membuat booking\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Create payment mutation\n  const createPaymentMutation = useMutation({\n    mutationFn: async (paymentData: { bookingId: string; paymentMethod: PaymentMethod; customerDetails: any }) => {\n      return await apiRequest(\"/api/payments/create\", \"POST\", paymentData);\n    },\n    onSuccess: (response: any) => {\n      // Redirect to Midtrans payment page\n      if (response?.transaction?.redirect_url) {\n        window.location.href = response.transaction.redirect_url;\n      } else {\n        toast({\n          title: \"Error\",\n          description: \"URL pembayaran tidak tersedia\",\n          variant: \"destructive\",\n        });\n      }\n      setIsProcessingPayment(false);\n    },\n    onError: (error: any) => {\n      console.error(\"Payment creation error:\", error);\n      toast({\n        title: \"Error Pembayaran\",\n        description: error.message || \"Gagal memproses pembayaran\",\n        variant: \"destructive\",\n      });\n      setIsProcessingPayment(false);\n    },\n  });\n\n  const handlePayment = async (booking: any) => {\n    setIsProcessingPayment(true);\n    \n    const formData = form.getValues();\n    const customerDetails = {\n      firstName: formData.customerName.split(' ')[0],\n      lastName: formData.customerName.split(' ').slice(1).join(' '),\n      email: formData.customerEmail,\n      phone: formData.customerPhone\n    };\n\n    createPaymentMutation.mutate({\n      bookingId: booking.id,\n      paymentMethod: selectedPaymentMethod,\n      customerDetails\n    });\n  };\n\n  const onSubmit = (data: BookingFormData) => {\n    if (!travelPackage) {\n      toast({\n        title: \"Error\",\n        description: \"Data paket tidak ditemukan\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    createBookingMutation.mutate({\n      ...data,\n      totalAmount\n    });\n  };\n\n  if (!match) {\n    return null;\n  }\n\n  if (isLoadingPackage) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Memuat data paket...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!travelPackage) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">Paket Tidak Ditemukan</h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">Paket wisata yang Anda cari tidak tersedia.</p>\n          <Button onClick={() => setLocation(\"/\")}>Kembali ke Beranda</Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b\">\n        <div className=\"max-w-6xl mx-auto px-4 py-4\">\n          <div className=\"flex items-center gap-4\">\n            <Button \n              variant=\"ghost\" \n              onClick={() => setLocation(\"/\")}\n              className=\"text-green-600 hover:text-green-700\"\n            >\n              ← Kembali\n            </Button>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Booking Paket Wisata</h1>\n              <p className=\"text-gray-600 dark:text-gray-400\">Lengkapi formulir untuk melanjutkan pembayaran</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-4 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Package Summary */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"sticky top-4\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <MapPin className=\"h-5 w-5 text-green-600\" />\n                  Detail Paket\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"aspect-video relative rounded-lg overflow-hidden\">\n                  <img \n                    src={travelPackage.imageUrl} \n                    alt={travelPackage.name}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                \n                <div>\n                  <h3 className=\"font-semibold text-lg text-gray-900 dark:text-white\">\n                    {travelPackage.name}\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-400 text-sm mt-1\">\n                    {travelPackage.description}\n                  </p>\n                </div>\n\n                <div className=\"flex items-center gap-2\">\n                  <Star className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                  <span className=\"text-sm font-medium\">{travelPackage.rating}/5</span>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                    <Clock className=\"h-4 w-4\" />\n                    <span>{travelPackage.duration}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                    <MapPin className=\"h-4 w-4\" />\n                    <span>{travelPackage.location}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                    <Users className=\"h-4 w-4\" />\n                    <span>{participants} peserta</span>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">\n                      Harga per orang:\n                    </span>\n                    <span className=\"font-medium\">\n                      Rp {travelPackage.price.toLocaleString('id-ID')}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between items-center text-lg font-bold mt-2\">\n                    <span>Total:</span>\n                    <span className=\"text-green-600\">\n                      Rp {totalAmount.toLocaleString('id-ID')}\n                    </span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Booking Form */}\n          <div className=\"lg:col-span-2\">\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                {/* Customer Information */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Informasi Pemesan</CardTitle>\n                    <CardDescription>\n                      Masukkan data pribadi yang valid untuk booking\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"customerName\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Nama Lengkap *</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Masukkan nama lengkap\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"customerEmail\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Email *</FormLabel>\n                            <FormControl>\n                              <Input \n                                type=\"email\" \n                                placeholder=\"contoh@email.com\" \n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"customerPhone\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Nomor Telepon *</FormLabel>\n                            <FormControl>\n                              <Input \n                                placeholder=\"08xxxxxxxxxx\" \n                                {...field} \n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Trip Details */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Detail Perjalanan</CardTitle>\n                    <CardDescription>\n                      Tentukan jumlah peserta dan tanggal keberangkatan\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"participants\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Jumlah Peserta *</FormLabel>\n                            <FormControl>\n                              <Input \n                                type=\"number\" \n                                min=\"1\" \n                                max=\"20\"\n                                placeholder=\"1\"\n                                {...field}\n                                onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}\n                              />\n                            </FormControl>\n                            <FormDescription>\n                              Maksimal 20 peserta per booking\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"startDate\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Tanggal Keberangkatan *</FormLabel>\n                            <FormControl>\n                              <Input \n                                type=\"date\" \n                                min={new Date().toISOString().split('T')[0]}\n                                {...field} \n                              />\n                            </FormControl>\n                            <FormDescription>\n                              Pilih tanggal minimal H+3 dari sekarang\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <FormField\n                      control={form.control}\n                      name=\"specialRequests\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Permintaan Khusus (Opsional)</FormLabel>\n                          <FormControl>\n                            <Textarea \n                              placeholder=\"Contoh: alergi makanan, kebutuhan aksesibilitas, dll.\"\n                              rows={3}\n                              {...field} \n                            />\n                          </FormControl>\n                          <FormDescription>\n                            Tuliskan permintaan khusus untuk perjalanan Anda\n                          </FormDescription>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </CardContent>\n                </Card>\n\n                {/* Payment Method */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <CreditCard className=\"h-5 w-5\" />\n                      Metode Pembayaran\n                    </CardTitle>\n                    <CardDescription>\n                      Pilih metode pembayaran yang diinginkan\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n                      {paymentMethods.map((method) => (\n                        <div \n                          key={method.value}\n                          className={`border rounded-lg p-3 cursor-pointer transition-all hover:border-green-500 ${\n                            selectedPaymentMethod === method.value \n                              ? 'border-green-500 bg-green-50 dark:bg-green-900/20' \n                              : 'border-gray-200 dark:border-gray-700'\n                          }`}\n                          onClick={() => setSelectedPaymentMethod(method.value)}\n                        >\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <div className={`w-4 h-4 rounded-full border-2 ${\n                              selectedPaymentMethod === method.value \n                                ? 'border-green-500 bg-green-500' \n                                : 'border-gray-300'\n                            }`}>\n                              {selectedPaymentMethod === method.value && (\n                                <div className=\"w-2 h-2 bg-white rounded-full m-0.5\"></div>\n                              )}\n                            </div>\n                            <span className=\"font-medium text-sm\">{method.label}</span>\n                          </div>\n                          <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                            {method.description}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Submit Button */}\n                <div className=\"flex justify-end\">\n                  <Button \n                    type=\"submit\" \n                    size=\"lg\"\n                    className=\"bg-green-600 hover:bg-green-700 text-white px-8\"\n                    disabled={createBookingMutation.isPending || isProcessingPayment}\n                  >\n                    {createBookingMutation.isPending ? (\n                      \"Membuat Booking...\"\n                    ) : isProcessingPayment ? (\n                      \"Memproses Pembayaran...\"\n                    ) : (\n                      `Bayar Sekarang - Rp ${totalAmount.toLocaleString('id-ID')}`\n                    )}\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":19828},"client/src/pages/home.tsx":{"content":"import Header from \"@/components/header\";\nimport HeroSection from \"@/components/hero-section\";\nimport FeaturedPackages from \"@/components/featured-packages\";\nimport ServicesSection from \"@/components/services-section\";\nimport AboutSection from \"@/components/about-section\";\nimport TestimonialsSection from \"@/components/testimonials-section\";\nimport MapSection from \"@/components/map-section\";\nimport ContactSection from \"@/components/contact-section\";\nimport Footer from \"@/components/footer\";\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      <HeroSection />\n      <FeaturedPackages />\n      <ServicesSection />\n      <AboutSection />\n      <TestimonialsSection />\n      <MapSection />\n      <ContactSection />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":812},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","size_bytes":1127},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }","size_bytes":771},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}